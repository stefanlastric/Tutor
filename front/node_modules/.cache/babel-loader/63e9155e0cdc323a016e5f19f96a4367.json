{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/Subjects.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getSubjects, deleteSubject } from '../../actions/subject';\nimport './Subjects.css';\nimport Moment from 'react-moment';\nimport Select from 'react-select';\nimport { createAppointment } from '../../actions/appointment';\nimport { isStudent, isTeacher } from '../../utils/helpers';\nimport { getCategory } from '../../actions/category';\nimport Modal from '../modal/Modal';\nconst headers = [{\n  key: 'title',\n  label: 'Title'\n}, {\n  key: 'category',\n  label: 'Category'\n}, {\n  key: 'priceperhour',\n  label: 'Price per hour'\n}, {\n  key: 'available',\n  label: 'Available'\n}, {\n  key: 'datecreated',\n  label: 'Date Created'\n}, {\n  key: 'actions',\n  label: 'Actions'\n}];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\n\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createAppointment = () => {\n      const {\n        createAppointment,\n        history\n      } = this.props;\n      const {\n        selectedSubject\n      } = this.state;\n      const data = {\n        subjectId: selectedSubject._id,\n        teacherId: selectedSubject.createdby\n      };\n      createAppointment(data, history);\n    };\n\n    this.deleteSubject = id => {\n      const {\n        deleteSubject\n      } = this.props;\n      deleteSubject(id);\n    };\n\n    this.getSubjects = () => {\n      const {\n        getSubjects\n      } = this.props;\n      const {\n        selectedOption\n      } = this.state;\n      let params;\n\n      if (selectedOption) {\n        params = {\n          category: selectedOption.value\n        };\n      }\n\n      getSubjects(params);\n    };\n\n    this.getCategory = () => {\n      const {\n        getCategory\n      } = this.props;\n      getCategory();\n    };\n\n    this.getTableOptions = () => {\n      const options = {\n        customComponents: {\n          actions: {\n            component: data => /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 13\n              }\n            }, !isTeacher() && /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => this.setState({\n                modalVisible: true,\n                selectedSubject: data\n              }),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 19\n              }\n            }, \"Request Appointment\")), isAdmin() && /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.deleteSubject(data._id),\n              type: \"button\",\n              className: \"btn btn-danger spacingl5\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 19\n              }\n            }, \"Delete\")))\n          },\n          available: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.available));\n            }\n          },\n          datecreated: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Moment, {\n                format: \"DD/MMM/YYYY hh:mm:ss\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 17\n                }\n              }, rowData.createdAt));\n            }\n          },\n          category: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 20\n                }\n              }, rowData.category && rowData.category.title);\n            }\n          }\n        }\n      };\n      return options;\n    };\n\n    this.mapOptions = () => {\n      const {\n        categories\n      } = this.props;\n      return categories.map(category => ({\n        label: category.title,\n        value: category.title\n      }));\n    };\n\n    this.handleOptionChange = selectedOption => {\n      this.setState({\n        selectedOption\n      }, () => this.getSubjects());\n    };\n\n    this.state = {\n      subjects: [],\n      selectedOption: null,\n      modalVisible: false,\n      selectedSubject: null\n    };\n  }\n\n  componentDidMount() {\n    this.getSubjects();\n    this.getCategory();\n  }\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      subjects,\n      isLoading,\n      categories\n    } = this.props;\n    const {\n      modalVisible,\n      selectedSubject\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subjects_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 23\n      }\n    }, \"Loading..\"), subjects && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, categories.length > 0 && /*#__PURE__*/React.createElement(Select, {\n      options: this.mapOptions(),\n      onChange: selectedOption => this.handleOptionChange(selectedOption),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      data: subjects,\n      headers: headers,\n      options: this.getTableOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 13\n      }\n    }), modalVisible && /*#__PURE__*/React.createElement(Modal, {\n      show: true,\n      handleClose: () => this.setState({\n        modalVisible: false,\n        selectedSubject: null\n      }),\n      onConfirm: () => this.createAppointment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }\n    }, \"test\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getSubjects: params => dispatch(getSubjects(params)),\n  getCategory: () => dispatch(getCategory()),\n  createAppointment: (data, history) => dispatch(createAppointment(data, history))\n});\n\nconst mapStateToProps = state => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading,\n  categories: state.category.category\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/Subjects.js"],"names":["React","Component","connect","Table","getSubjects","deleteSubject","Moment","Select","createAppointment","isStudent","isTeacher","getCategory","Modal","headers","key","label","formatYesNo","value","Subjects","constructor","props","history","selectedSubject","state","data","subjectId","_id","teacherId","createdby","id","selectedOption","params","category","getTableOptions","options","customComponents","actions","component","setState","modalVisible","isAdmin","available","rowData","datecreated","createdAt","title","mapOptions","categories","map","handleOptionChange","subjects","componentDidMount","nextPath","path","push","render","isLoading","length","mapDispatchToProps","dispatch","mapStateToProps","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getSubjects, deleteSubject } from '../../actions/subject';\nimport './Subjects.css';\nimport Moment from 'react-moment';\nimport Select from 'react-select';\nimport { createAppointment } from '../../actions/appointment';\nimport { isStudent, isTeacher } from '../../utils/helpers';\nimport { getCategory } from '../../actions/category';\n\nimport Modal from '../modal/Modal';\n\nconst headers = [\n  {\n    key: 'title',\n    label: 'Title',\n  },\n  {\n    key: 'category',\n    label: 'Category',\n  },\n  {\n    key: 'priceperhour',\n    label: 'Price per hour',\n  },\n\n  {\n    key: 'available',\n    label: 'Available',\n  },\n  {\n    key: 'datecreated',\n    label: 'Date Created',\n  },\n  {\n    key: 'actions',\n    label: 'Actions',\n  },\n];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subjects: [],\n      selectedOption: null,\n      modalVisible: false,\n      selectedSubject: null,\n    };\n  }\n  componentDidMount() {\n    this.getSubjects();\n    this.getCategory();\n  }\n\n  createAppointment = () => {\n    const { createAppointment, history } = this.props;\n    const { selectedSubject } = this.state;\n    const data = {\n      subjectId: selectedSubject._id,\n      teacherId: selectedSubject.createdby,\n    };\n    createAppointment(data, history);\n  };\n  deleteSubject = (id) => {\n    const { deleteSubject } = this.props;\n    deleteSubject(id);\n  };\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  getSubjects = () => {\n    const { getSubjects } = this.props;\n    const { selectedOption } = this.state;\n\n    let params;\n    if (selectedOption) {\n      params = {\n        category: selectedOption.value,\n      };\n    }\n\n    getSubjects(params);\n  };\n\n  getCategory = () => {\n    const { getCategory } = this.props;\n    getCategory();\n  };\n\n  getTableOptions = () => {\n    const options = {\n      customComponents: {\n        actions: {\n          component: (data) => (\n            <div>\n              {!isTeacher() && (\n                <div>\n                  <button\n                    className='btn btn-secondary'\n                    onClick={() =>\n                      this.setState({\n                        modalVisible: true,\n                        selectedSubject: data,\n                      })\n                    }\n                  >\n                    Request Appointment\n                  </button>\n                </div>\n              )}\n\n              {isAdmin() && (\n                <div>\n                  <button\n                    onClick={() => this.deleteSubject(data._id)}\n                    type='button'\n                    className='btn btn-danger spacingl5'\n                  >\n                    Delete\n                  </button>\n                </div>\n              )}\n            </div>\n          ),\n        },\n        available: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.available)}</div>;\n          },\n        },\n        datecreated: {\n          component: (rowData) => {\n            return (\n              <div>\n                <Moment format='DD/MMM/YYYY hh:mm:ss'>\n                  {rowData.createdAt}\n                </Moment>\n              </div>\n            );\n          },\n        },\n        category: {\n          component: (rowData) => {\n            return <div>{rowData.category && rowData.category.title}</div>;\n          },\n        },\n      },\n    };\n\n    return options;\n  };\n\n  mapOptions = () => {\n    const { categories } = this.props;\n    return categories.map((category) => ({\n      label: category.title,\n      value: category.title,\n    }));\n  };\n\n  handleOptionChange = (selectedOption) => {\n    this.setState({ selectedOption }, () => this.getSubjects());\n  };\n\n  render() {\n    const { subjects, isLoading, categories } = this.props;\n    const { modalVisible, selectedSubject } = this.state;\n\n    return (\n      <div className='subjects_table'>\n        {isLoading && <div>Loading..</div>}\n\n        {subjects && (\n          <div>\n            {categories.length > 0 && (\n              <Select\n                options={this.mapOptions()}\n                onChange={(selectedOption) =>\n                  this.handleOptionChange(selectedOption)\n                }\n              />\n            )}\n            <Table\n              data={subjects}\n              headers={headers}\n              options={this.getTableOptions()}\n            />\n            {modalVisible && (\n              <Modal\n                show\n                handleClose={() =>\n                  this.setState({ modalVisible: false, selectedSubject: null })\n                }\n                onConfirm={() => this.createAppointment()}\n              >\n                <div>test</div>\n              </Modal>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSubjects: (params) => dispatch(getSubjects(params)),\n  getCategory: () => dispatch(getCategory()),\n  createAppointment: (data, history) =>\n    dispatch(createAppointment(data, history)),\n});\n\nconst mapStateToProps = (state) => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading,\n  categories: state.category.category,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);\n"]},"metadata":{},"sourceType":"module"}