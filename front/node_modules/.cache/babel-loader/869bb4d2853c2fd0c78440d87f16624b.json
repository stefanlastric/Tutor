{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_APPOINTMENT, GET_APPOINTMENTS, APPOINTMENT_ERROR, DELETE_APPOINTMENT, APPROVE_APPOINTMENT, CANCEL_APPOINTMENT } from './types'; //Approve appointment\n\nexport const approveAppointment = id => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`/appointments/approve/${id}`);\n    dispatch({\n      type: APPROVE_APPOINTMENT,\n      payload: {\n        id\n      }\n    });\n    dispatch(setAlert('Appointment Approved', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const cancelAppointment = id => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post(`/appointments/cancel/${id}`);\n    dispatch({\n      type: CANCEL_APPOINTMENT,\n      payload: {\n        id\n      }\n    });\n    dispatch(setAlert('Appointment Canceled', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Cancel appointment\n//Get all appointments\n\nexport const getAppointments = () => async dispatch => {\n  try {\n    const res = await axios.get('/appointments');\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Get all AppointmentsStudent\n\nexport const getAppointmentsStudent = () => async dispatch => {\n  try {\n    const res = await axios.get('/appointments/student');\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Get all AppointmentsTeacher\n\nexport const getAppointmentsTeacher = () => async dispatch => {\n  try {\n    const res = await axios.get('/appointments/teacher');\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Get appointments by ID\n\nexport const getAppointmentsById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/appointments/user/${userId}`);\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Create or update appointments\n\nexport const createAppointment = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/appointments', formData, config);\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Appointment Updated' : 'Appointment Created', 'success'));\n\n    if (!edit) {\n      history.push('/');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Delete appointments\n\nexport const deleteAppointment = id => async dispatch => {\n  try {\n    await axios.delete(`/appointments/${id}`);\n    dispatch({\n      type: DELETE_APPOINTMENT,\n      payload: id\n    });\n    dispatch(setAlert('Appointment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/actions/appointment.js"],"names":["axios","setAlert","GET_APPOINTMENT","GET_APPOINTMENTS","APPOINTMENT_ERROR","DELETE_APPOINTMENT","APPROVE_APPOINTMENT","CANCEL_APPOINTMENT","approveAppointment","id","dispatch","config","headers","res","post","type","payload","err","msg","response","statusText","status","cancelAppointment","getAppointments","get","data","getAppointmentsStudent","getAppointmentsTeacher","getAppointmentsById","userId","createAppointment","formData","history","edit","push","errors","forEach","error","deleteAppointment","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_APPOINTMENT,\n  GET_APPOINTMENTS,\n  APPOINTMENT_ERROR,\n  DELETE_APPOINTMENT,\n  APPROVE_APPOINTMENT,\n  CANCEL_APPOINTMENT,\n} from './types';\n\n//Approve appointment\nexport const approveAppointment = (id) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const res = await axios.post(`/appointments/approve/${id}`);\n\n    dispatch({\n      type: APPROVE_APPOINTMENT,\n      payload: { id },\n    });\n    dispatch(setAlert('Appointment Approved', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\nexport const cancelAppointment = (id) => async (dispatch) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const res = await axios.post(`/appointments/cancel/${id}`);\n\n    dispatch({\n      type: CANCEL_APPOINTMENT,\n      payload: { id },\n    });\n    dispatch(setAlert('Appointment Canceled', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Cancel appointment\n\n//Get all appointments\nexport const getAppointments = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/appointments');\n\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Get all AppointmentsStudent\nexport const getAppointmentsStudent = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/appointments/student');\n\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Get all AppointmentsTeacher\nexport const getAppointmentsTeacher = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/appointments/teacher');\n\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Get appointments by ID\nexport const getAppointmentsById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/appointments/user/${userId}`);\n\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Create or update appointments\nexport const createAppointment = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.post('/appointments', formData, config);\n\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data,\n    });\n\n    dispatch(\n      setAlert(edit ? 'Appointment Updated' : 'Appointment Created', 'success')\n    );\n\n    if (!edit) {\n      history.push('/');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Delete appointments\n\nexport const deleteAppointment = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/appointments/${id}`);\n\n    dispatch({\n      type: DELETE_APPOINTMENT,\n      payload: id,\n    });\n\n    dispatch(setAlert('Appointment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}