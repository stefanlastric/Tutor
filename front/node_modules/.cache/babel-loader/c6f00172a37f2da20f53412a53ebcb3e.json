{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_SUBJECT, GET_SUBJECTS, SUBJECT_ERROR, DELETE_SUBJECT } from './types'; //export current user subjects\n\nexport const getCurrentSubject = () => async dispatch => {\n  try {\n    const res = await axios.get('/subjects/me');\n    dispatch({\n      type: GET_SUBJECT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get all subjects\n\nexport const getSubjects = () => async dispatch => {\n  try {\n    const res = await axios.get('/subjects');\n    dispatch({\n      type: GET_SUBJECTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Get my subjects\n\nexport const getMySubjects = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/subjects/my/${userId}`);\n    dispatch({\n      type: GET_SUBJECTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Get subjects by ID\n\nexport const getSubjectsById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/subjects/user/${userId}`);\n    dispatch({\n      type: GET_SUBJECT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Create or update subjects\n\nexport const createSubject = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/subjects', formData, config);\n    dispatch({\n      type: GET_SUBJECT,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Subject Updated' : 'Subject Created', 'success'));\n\n    if (!edit) {\n      history.push('/');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Delete subjects\n\nexport const deleteSubject = id => async dispatch => {\n  try {\n    await axios.delete(`/subjects/${id}`);\n    dispatch({\n      type: DELETE_SUBJECT,\n      payload: id\n    });\n    dispatch(setAlert('Subject Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/actions/subject.js"],"names":["axios","setAlert","GET_SUBJECT","GET_SUBJECTS","SUBJECT_ERROR","DELETE_SUBJECT","getCurrentSubject","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getSubjects","getMySubjects","userId","getSubjectsById","createSubject","formData","history","edit","config","headers","post","push","errors","forEach","error","deleteSubject","id","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_SUBJECT,\n  GET_SUBJECTS,\n  SUBJECT_ERROR,\n  DELETE_SUBJECT,\n} from './types';\n\n//export current user subjects\nexport const getCurrentSubject = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/subjects/me');\n\n    dispatch({\n      type: GET_SUBJECT,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Get all subjects\nexport const getSubjects = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/subjects');\n\n    dispatch({\n      type: GET_SUBJECTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Get my subjects\nexport const getMySubjects = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/subjects/my/${userId}`);\n\n    dispatch({\n      type: GET_SUBJECTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Get subjects by ID\nexport const getSubjectsById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/subjects/user/${userId}`);\n\n    dispatch({\n      type: GET_SUBJECT,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Create or update subjects\nexport const createSubject = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.post('/subjects', formData, config);\n\n    dispatch({\n      type: GET_SUBJECT,\n      payload: res.data,\n    });\n\n    dispatch(setAlert(edit ? 'Subject Updated' : 'Subject Created', 'success'));\n\n    if (!edit) {\n      history.push('/');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Delete subjects\n\nexport const deleteSubject = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/subjects/${id}`);\n\n    dispatch({\n      type: DELETE_SUBJECT,\n      payload: id,\n    });\n\n    dispatch(setAlert('Subject Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: SUBJECT_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}