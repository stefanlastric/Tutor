{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/appointments/AppointmentsTeacher.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport Table from '../table/Table';\nimport { getAppointmentsTeacher, approveAppointment, cancelAppointment, createAppointment } from '../../actions/appointment';\nimport './Appointments.css';\nimport Moment from 'react-moment';\nimport Modal from '../modal/Modal';\nconst headers = [{\n  key: 'subject',\n  label: 'Subject'\n}, {\n  key: 'timelimit',\n  label: 'Timelimit'\n}, {\n  key: 'approved',\n  label: 'Approved'\n}, {\n  key: 'createdby',\n  label: 'Student'\n}, {\n  key: 'canceled',\n  label: 'Canceled'\n}, {\n  key: 'datecreated',\n  label: 'Date Created'\n}, {\n  key: 'actions',\n  label: 'Actions'\n}];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\n\nclass Appointments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAppointmentsTeacher = () => {\n      const {\n        getAppointmentsTeacher\n      } = this.props;\n      getAppointmentsTeacher();\n    };\n\n    this.approveAppointment = id => {\n      const {\n        approveAppointment\n      } = this.props;\n      approveAppointment(id);\n    };\n\n    this.cancelAppointment = () => {\n      const {\n        cancelAppointment\n      } = this.props;\n      const {\n        selectedAppointment\n      } = this.state;\n      cancelAppointment(selectedAppointment._id);\n    };\n\n    this.getTableOptions = () => {\n      const {\n        approveAppointment,\n        cancelAppointment\n      } = this.props;\n      const options = {\n        customComponents: {\n          actions: {\n            component: rowData => /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 13\n              }\n            }, rowData.canceled ? 'Canceled!' : rowData.approved ? /*#__PURE__*/React.createElement(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => this.setState({\n                modalVisible: true,\n                selectedAppointment: rowData\n              }),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }\n            }, \"Cancel Appointment\") : /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.approveAppointment(rowData._id),\n              type: \"button\",\n              class: \"btn btn-success\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 17\n              }\n            }, \"Approve Appointment\"))\n          },\n          datecreated: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Moment, {\n                format: \"DD/MMM/YYYY hh:mm\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 17\n                }\n              }, rowData.datecreated));\n            }\n          },\n          approved: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.approved));\n            }\n          },\n          canceled: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.canceled));\n            }\n          },\n          subject: {\n            component: rowData => {\n              if (rowData.subject != null) return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 22\n                }\n              }, rowData.subject.title);\n            }\n          },\n          teacher: {\n            component: rowData => {\n              console.log(rowData);\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 15\n                }\n              }, rowData && rowData.teacher && rowData.teacher.name);\n            }\n          },\n          createdby: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 15\n                }\n              }, rowData && rowData.createdby && rowData.createdby.name);\n            }\n          }\n        }\n      };\n      return options;\n    };\n\n    this.state = {\n      appointments: [],\n      modalVisible: false\n    };\n  }\n\n  componentDidMount() {\n    this.getAppointmentsTeacher();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      isLoading,\n      approved,\n      canceled\n    } = this.props;\n\n    if (prevProps.isLoading && !isLoading && (!isEmpty(approved) || !isEmpty(canceled))) {\n      this.getAppointmentsTeacher();\n    }\n  }\n\n  render() {\n    const {\n      appointments,\n      isLoading\n    } = this.props;\n    const {\n      modalVisible,\n      selectedAppointment\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointments_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 7\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 23\n      }\n    }, \"Loading..\"), appointments && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      data: appointments,\n      headers: headers,\n      options: this.getTableOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 13\n      }\n    }), modalVisible && /*#__PURE__*/React.createElement(Modal, {\n      show: true,\n      handleClose: () => this.setState({\n        modalVisible: false,\n        selectedAppointment: null\n      }),\n      onConfirm: () => this.cancelAppointment(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getAppointmentsTeacher: () => dispatch(getAppointmentsTeacher()),\n  approveAppointment: id => dispatch(approveAppointment(id)),\n  cancelAppointment: id => dispatch(cancelAppointment(id)),\n  createAppointments: (data, history) => dispatch(createAppointment(data, history))\n});\n\nconst mapStateToProps = state => ({\n  appointments: state.appointments.appointments,\n  isLoading: state.appointments.loading,\n  approved: state.appointments.approved,\n  canceled: state.appointments.canceled\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Appointments);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/appointments/AppointmentsTeacher.js"],"names":["React","Component","connect","isEmpty","Table","getAppointmentsTeacher","approveAppointment","cancelAppointment","createAppointment","Moment","Modal","headers","key","label","formatYesNo","value","Appointments","constructor","props","id","selectedAppointment","state","_id","getTableOptions","options","customComponents","actions","component","rowData","canceled","approved","setState","modalVisible","datecreated","subject","title","teacher","console","log","name","createdby","appointments","componentDidMount","componentDidUpdate","prevProps","isLoading","render","mapDispatchToProps","dispatch","createAppointments","data","history","mapStateToProps","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport Table from '../table/Table';\nimport {\n  getAppointmentsTeacher,\n  approveAppointment,\n  cancelAppointment,\n  createAppointment,\n} from '../../actions/appointment';\nimport './Appointments.css';\nimport Moment from 'react-moment';\nimport Modal from '../modal/Modal';\n\nconst headers = [\n  {\n    key: 'subject',\n    label: 'Subject',\n  },\n\n  {\n    key: 'timelimit',\n    label: 'Timelimit',\n  },\n  {\n    key: 'approved',\n    label: 'Approved',\n  },\n  {\n    key: 'createdby',\n    label: 'Student',\n  },\n  {\n    key: 'canceled',\n    label: 'Canceled',\n  },\n\n  {\n    key: 'datecreated',\n    label: 'Date Created',\n  },\n  {\n    key: 'actions',\n    label: 'Actions',\n  },\n];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\n\nclass Appointments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointments: [],\n      modalVisible: false,\n    };\n  }\n\n  componentDidMount() {\n    this.getAppointmentsTeacher();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isLoading, approved, canceled } = this.props;\n    if (\n      prevProps.isLoading &&\n      !isLoading &&\n      (!isEmpty(approved) || !isEmpty(canceled))\n    ) {\n      this.getAppointmentsTeacher();\n    }\n  }\n  getAppointmentsTeacher = () => {\n    const { getAppointmentsTeacher } = this.props;\n    getAppointmentsTeacher();\n  };\n\n  approveAppointment = (id) => {\n    const { approveAppointment } = this.props;\n    approveAppointment(id);\n  };\n\n  cancelAppointment = () => {\n    const { cancelAppointment } = this.props;\n    const { selectedAppointment } = this.state;\n    cancelAppointment(selectedAppointment._id);\n  };\n\n  getTableOptions = () => {\n    const { approveAppointment, cancelAppointment } = this.props;\n    const options = {\n      customComponents: {\n        actions: {\n          component: (rowData) => (\n            <div>\n              {rowData.canceled ? (\n                'Canceled!'\n              ) : rowData.approved ? (\n                <button\n                  className='btn btn-secondary'\n                  onClick={() =>\n                    this.setState({\n                      modalVisible: true,\n                      selectedAppointment: rowData,\n                    })\n                  }\n                >\n                  Cancel Appointment\n                </button>\n              ) : (\n                <button\n                  onClick={() => this.approveAppointment(rowData._id)}\n                  type='button'\n                  class='btn btn-success'\n                >\n                  Approve Appointment\n                </button>\n              )}\n            </div>\n          ),\n        },\n        datecreated: {\n          component: (rowData) => {\n            return (\n              <div>\n                <Moment format='DD/MMM/YYYY hh:mm'>\n                  {rowData.datecreated}\n                </Moment>\n              </div>\n            );\n          },\n        },\n        approved: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.approved)}</div>;\n          },\n        },\n        canceled: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.canceled)}</div>;\n          },\n        },\n        subject: {\n          component: (rowData) => {\n            if (rowData.subject != null)\n              return <div>{rowData.subject.title}</div>;\n          },\n        },\n        teacher: {\n          component: (rowData) => {\n            console.log(rowData);\n            return (\n              <div>{rowData && rowData.teacher && rowData.teacher.name}</div>\n            );\n          },\n        },\n        createdby: {\n          component: (rowData) => {\n            return (\n              <div>\n                {rowData && rowData.createdby && rowData.createdby.name}\n              </div>\n            );\n          },\n        },\n      },\n    };\n\n    return options;\n  };\n  render() {\n    const { appointments, isLoading } = this.props;\n    const { modalVisible, selectedAppointment } = this.state;\n    return (\n      <div className='appointments_table'>\n        {isLoading && <div>Loading..</div>}\n        {appointments && (\n          <div>\n            <Table\n              data={appointments}\n              headers={headers}\n              options={this.getTableOptions()}\n            />\n            {modalVisible && (\n              <Modal\n                show\n                handleClose={() =>\n                  this.setState({\n                    modalVisible: false,\n                    selectedAppointment: null,\n                  })\n                }\n                onConfirm={() => this.cancelAppointment()}\n              ></Modal>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAppointmentsTeacher: () => dispatch(getAppointmentsTeacher()),\n  approveAppointment: (id) => dispatch(approveAppointment(id)),\n  cancelAppointment: (id) => dispatch(cancelAppointment(id)),\n  createAppointments: (data, history) =>\n    dispatch(createAppointment(data, history)),\n});\n\nconst mapStateToProps = (state) => ({\n  appointments: state.appointments.appointments,\n  isLoading: state.appointments.loading,\n  approved: state.appointments.approved,\n  canceled: state.appointments.canceled,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Appointments);\n"]},"metadata":{},"sourceType":"module"}