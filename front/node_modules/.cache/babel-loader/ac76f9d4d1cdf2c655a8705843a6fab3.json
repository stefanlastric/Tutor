{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_APPOINTMENT, GET_APPOINTMENTS, APPOINTMENT_ERROR, DELETE_APPOINTMENT } from './types'; //export current user appointments\n\nexport const getCurrentAppointment = () => async dispatch => {\n  try {\n    const res = await axios.get('/appointments/me');\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get all appointments\n\nexport const getAppointments = () => async dispatch => {\n  try {\n    const res = await axios.get('/appointments');\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Get appointments by ID\n\nexport const getAppointmentsById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/appointments/user/${userId}`);\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Create or update appointments\n\nexport const createAppointment = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/appointments', formData, config);\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data\n    });\n    dispatch(setAlert(edit ? 'Appointment Updated' : 'Appointment Created', 'success'));\n\n    if (!edit) {\n      history.push('/');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Delete appointments\n\nexport const deleteAppointment = id => async dispatch => {\n  try {\n    await axios.delete(`/appointments/${id}`);\n    dispatch({\n      type: DELETE_APPOINTMENT,\n      payload: id\n    });\n    dispatch(setAlert('Appointment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/actions/appointment.js"],"names":["axios","setAlert","GET_APPOINTMENT","GET_APPOINTMENTS","APPOINTMENT_ERROR","DELETE_APPOINTMENT","getCurrentAppointment","dispatch","res","get","type","payload","data","err","msg","response","statusText","status","getAppointments","getAppointmentsById","userId","createAppointment","formData","history","edit","config","headers","post","push","errors","forEach","error","deleteAppointment","id","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_APPOINTMENT,\n  GET_APPOINTMENTS,\n  APPOINTMENT_ERROR,\n  DELETE_APPOINTMENT,\n} from './types';\n\n//export current user appointments\nexport const getCurrentAppointment = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/appointments/me');\n\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Get all appointments\nexport const getAppointments = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/appointments');\n\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Get appointments by ID\nexport const getAppointmentsById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/appointments/user/${userId}`);\n\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Create or update appointments\nexport const createAppointment = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.post('/appointments', formData, config);\n\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data,\n    });\n\n    dispatch(\n      setAlert(edit ? 'Appointment Updated' : 'Appointment Created', 'success')\n    );\n\n    if (!edit) {\n      history.push('/');\n    }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Delete appointments\n\nexport const deleteAppointment = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/appointments/${id}`);\n\n    dispatch({\n      type: DELETE_APPOINTMENT,\n      payload: id,\n    });\n\n    dispatch(setAlert('Appointment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}