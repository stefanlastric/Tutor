{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/Subjects.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getSubjects, deleteSubject } from '../../actions/subject';\nimport './Subjects.css';\nimport Moment from 'react-moment';\nimport Select from 'react-select';\nimport { createAppointment } from '../../actions/appointment';\nimport { isAdmin, isTeacher } from '../../utils/helpers';\nimport { getCategory } from '../../actions/category';\nimport Modal from '../modal/Modal';\nimport DatePicker from 'react-datepicker';\nimport TimePicker from 'react-times'; // use material theme\n\nimport 'react-times/css/material/default.css'; // or you can use classic theme\n\nimport 'react-times/css/classic/default.css';\nconst headers = [{\n  key: 'title',\n  label: 'Title'\n}, {\n  key: 'category',\n  label: 'Category'\n}, {\n  key: 'priceperhour',\n  label: 'Price per hour'\n}, {\n  key: 'available',\n  label: 'Available'\n}, {\n  key: 'datecreated',\n  label: 'Date Created'\n}, {\n  key: 'actions',\n  label: 'Actions'\n}];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\n\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createAppointment = () => {\n      const {\n        createAppointment,\n        history\n      } = this.props;\n      const {\n        selectedSubject,\n        selectedDate,\n        selectedTime\n      } = this.state;\n      console.log('selectedDate: ', selectedDate);\n      console.log('selectedTime: ', selectedTime);\n      const date = new Date(selectedDate.getUTCFullYear(), selectedDate.getUTCMonth(), selectedDate.getUTCDate(), selectedTime.hour, selectedTime.minute, 0, 0);\n      console.log(date.toUTCString()); // const data = {\n      //   subjectId: selectedSubject._id,\n      //   teacherId: selectedSubject.createdby,\n      // };\n      // createAppointment(data, history);\n    };\n\n    this.deleteSubject = id => {\n      const {\n        deleteSubject\n      } = this.props;\n      deleteSubject(id);\n    };\n\n    this.getSubjects = () => {\n      const {\n        getSubjects\n      } = this.props;\n      const {\n        selectedOption\n      } = this.state;\n      let params;\n\n      if (selectedOption) {\n        params = {\n          category: selectedOption.value\n        };\n      }\n\n      getSubjects(params);\n    };\n\n    this.getCategory = () => {\n      const {\n        getCategory\n      } = this.props;\n      getCategory();\n    };\n\n    this.getTableOptions = () => {\n      const options = {\n        customComponents: {\n          actions: {\n            component: data => /*#__PURE__*/React.createElement(\"div\", {\n              className: \"subjects_actions\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 13\n              }\n            }, !isTeacher() && /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => this.setState({\n                modalVisible: true,\n                selectedSubject: data\n              }),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 19\n              }\n            }, \"Request Appointment\")), isAdmin() && /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.deleteSubject(data._id),\n              type: \"button\",\n              className: \"btn btn-danger spacingl5\",\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }\n            }, \"Delete\")))\n          },\n          available: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.available));\n            }\n          },\n          datecreated: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Moment, {\n                format: \"DD/MMM/YYYY hh:mm:ss\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 17\n                }\n              }, rowData.createdAt));\n            }\n          },\n          category: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 20\n                }\n              }, rowData.category && rowData.category.title);\n            }\n          }\n        }\n      };\n      return options;\n    };\n\n    this.mapOptions = () => {\n      const {\n        categories\n      } = this.props;\n      return categories.map(category => ({\n        label: category.title,\n        value: category.title\n      }));\n    };\n\n    this.handleOptionChange = selectedOption => {\n      this.setState({\n        selectedOption\n      }, () => this.getSubjects());\n    };\n\n    this.handleDateChange = selectedDate => {\n      this.setState({\n        selectedDate\n      });\n    };\n\n    this.handleTimeChange = selectedTime => {\n      console.log(selectedTime);\n      this.setState({\n        selectedTime\n      });\n    };\n\n    this.renderModal = () => {\n      const {\n        selectedDate,\n        selectedTime\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"appointment_date_modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 9\n        }\n      }, \"Choose Date:\"), /*#__PURE__*/React.createElement(DatePicker, {\n        selected: selectedDate,\n        onChange: this.handleDateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 9\n        }\n      }, \"Choose Time:\"), /*#__PURE__*/React.createElement(TimePicker, {\n        time: selectedTime && `${selectedTime.hour}:${selectedTime.minute}`,\n        onTimeChange: this.handleTimeChange,\n        theme: \"classic\",\n        timeMode: \"24\" // use 24 or 12 hours mode, default 24\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.state = {\n      subjects: [],\n      selectedOption: null,\n      modalVisible: false,\n      selectedSubject: null,\n      selectedDate: null,\n      selectedTime: '10:00'\n    };\n  }\n\n  componentDidMount() {\n    this.getSubjects();\n    this.getCategory();\n  }\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      subjects,\n      isLoading,\n      categories\n    } = this.props;\n    const {\n      modalVisible,\n      selectedSubject,\n      selectedDate,\n      selectedTime\n    } = this.state; // console.log(selectedDate && selectedDate.toISOString());\n    // console.log(selectedTime);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subjects_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 7\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 23\n      }\n    }, \"Loading..\"), subjects && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 11\n      }\n    }, categories.length > 0 && /*#__PURE__*/React.createElement(Select, {\n      options: this.mapOptions(),\n      onChange: selectedOption => this.handleOptionChange(selectedOption),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      data: subjects,\n      headers: headers,\n      options: this.getTableOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }\n    }), modalVisible && /*#__PURE__*/React.createElement(Modal, {\n      show: true,\n      handleClose: () => this.setState({\n        modalVisible: false,\n        selectedSubject: null,\n        selectedDate: null,\n        selectedTime: null\n      }),\n      onConfirm: () => this.createAppointment(),\n      onConfirmDisabled: !selectedDate || !selectedTime,\n      title: \"Select date for appointment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 15\n      }\n    }, this.renderModal())));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getSubjects: params => dispatch(getSubjects(params)),\n  getCategory: () => dispatch(getCategory()),\n  createAppointment: (data, history) => dispatch(createAppointment(data, history))\n});\n\nconst mapStateToProps = state => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading,\n  categories: state.category.category\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/Subjects.js"],"names":["React","Component","connect","Table","getSubjects","deleteSubject","Moment","Select","createAppointment","isAdmin","isTeacher","getCategory","Modal","DatePicker","TimePicker","headers","key","label","formatYesNo","value","Subjects","constructor","props","history","selectedSubject","selectedDate","selectedTime","state","console","log","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","hour","minute","toUTCString","id","selectedOption","params","category","getTableOptions","options","customComponents","actions","component","data","setState","modalVisible","_id","available","rowData","datecreated","createdAt","title","mapOptions","categories","map","handleOptionChange","handleDateChange","handleTimeChange","renderModal","subjects","componentDidMount","nextPath","path","push","render","isLoading","length","mapDispatchToProps","dispatch","mapStateToProps","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getSubjects, deleteSubject } from '../../actions/subject';\nimport './Subjects.css';\nimport Moment from 'react-moment';\nimport Select from 'react-select';\nimport { createAppointment } from '../../actions/appointment';\nimport { isAdmin, isTeacher } from '../../utils/helpers';\nimport { getCategory } from '../../actions/category';\n\nimport Modal from '../modal/Modal';\nimport DatePicker from 'react-datepicker';\nimport TimePicker from 'react-times';\n\n// use material theme\nimport 'react-times/css/material/default.css';\n// or you can use classic theme\nimport 'react-times/css/classic/default.css';\n\nconst headers = [\n  {\n    key: 'title',\n    label: 'Title',\n  },\n  {\n    key: 'category',\n    label: 'Category',\n  },\n  {\n    key: 'priceperhour',\n    label: 'Price per hour',\n  },\n\n  {\n    key: 'available',\n    label: 'Available',\n  },\n  {\n    key: 'datecreated',\n    label: 'Date Created',\n  },\n  {\n    key: 'actions',\n    label: 'Actions',\n  },\n];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subjects: [],\n      selectedOption: null,\n      modalVisible: false,\n      selectedSubject: null,\n      selectedDate: null,\n      selectedTime: '10:00',\n    };\n  }\n  componentDidMount() {\n    this.getSubjects();\n    this.getCategory();\n  }\n\n  createAppointment = () => {\n    const { createAppointment, history } = this.props;\n    const { selectedSubject, selectedDate, selectedTime } = this.state;\n    console.log('selectedDate: ', selectedDate);\n    console.log('selectedTime: ', selectedTime);\n    const date = new Date(\n      selectedDate.getUTCFullYear(),\n      selectedDate.getUTCMonth(),\n      selectedDate.getUTCDate(),\n      selectedTime.hour,\n      selectedTime.minute,\n      0,\n      0\n    );\n    console.log(date.toUTCString());\n    // const data = {\n    //   subjectId: selectedSubject._id,\n    //   teacherId: selectedSubject.createdby,\n    // };\n    // createAppointment(data, history);\n  };\n  deleteSubject = (id) => {\n    const { deleteSubject } = this.props;\n    deleteSubject(id);\n  };\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  getSubjects = () => {\n    const { getSubjects } = this.props;\n    const { selectedOption } = this.state;\n\n    let params;\n    if (selectedOption) {\n      params = {\n        category: selectedOption.value,\n      };\n    }\n\n    getSubjects(params);\n  };\n\n  getCategory = () => {\n    const { getCategory } = this.props;\n    getCategory();\n  };\n\n  getTableOptions = () => {\n    const options = {\n      customComponents: {\n        actions: {\n          component: (data) => (\n            <div className='subjects_actions'>\n              {!isTeacher() && (\n                <div>\n                  <button\n                    className='btn btn-secondary'\n                    onClick={() =>\n                      this.setState({\n                        modalVisible: true,\n                        selectedSubject: data,\n                      })\n                    }\n                  >\n                    Request Appointment\n                  </button>\n                </div>\n              )}\n\n              {isAdmin() && (\n                <div>\n                  <button\n                    onClick={() => this.deleteSubject(data._id)}\n                    type='button'\n                    className='btn btn-danger spacingl5'\n                  >\n                    Delete\n                  </button>\n                </div>\n              )}\n            </div>\n          ),\n        },\n        available: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.available)}</div>;\n          },\n        },\n        datecreated: {\n          component: (rowData) => {\n            return (\n              <div>\n                <Moment format='DD/MMM/YYYY hh:mm:ss'>\n                  {rowData.createdAt}\n                </Moment>\n              </div>\n            );\n          },\n        },\n        category: {\n          component: (rowData) => {\n            return <div>{rowData.category && rowData.category.title}</div>;\n          },\n        },\n      },\n    };\n\n    return options;\n  };\n\n  mapOptions = () => {\n    const { categories } = this.props;\n    return categories.map((category) => ({\n      label: category.title,\n      value: category.title,\n    }));\n  };\n\n  handleOptionChange = (selectedOption) => {\n    this.setState({ selectedOption }, () => this.getSubjects());\n  };\n\n  handleDateChange = (selectedDate) => {\n    this.setState({ selectedDate });\n  };\n\n  handleTimeChange = (selectedTime) => {\n    console.log(selectedTime);\n    this.setState({ selectedTime });\n  };\n\n  renderModal = () => {\n    const { selectedDate, selectedTime } = this.state;\n    return (\n      <div className='appointment_date_modal'>\n        <span>Choose Date:</span>\n        <DatePicker selected={selectedDate} onChange={this.handleDateChange} />\n        <span>Choose Time:</span>\n        <TimePicker\n          time={selectedTime && `${selectedTime.hour}:${selectedTime.minute}`}\n          onTimeChange={this.handleTimeChange}\n          theme='classic'\n          timeMode='24' // use 24 or 12 hours mode, default 24\n        />\n      </div>\n    );\n  };\n\n  render() {\n    const { subjects, isLoading, categories } = this.props;\n    const {\n      modalVisible,\n      selectedSubject,\n      selectedDate,\n      selectedTime,\n    } = this.state;\n\n    // console.log(selectedDate && selectedDate.toISOString());\n    // console.log(selectedTime);\n\n    return (\n      <div className='subjects_table'>\n        {isLoading && <div>Loading..</div>}\n\n        {subjects && (\n          <div>\n            {categories.length > 0 && (\n              <Select\n                options={this.mapOptions()}\n                onChange={(selectedOption) =>\n                  this.handleOptionChange(selectedOption)\n                }\n              />\n            )}\n            <Table\n              data={subjects}\n              headers={headers}\n              options={this.getTableOptions()}\n            />\n            {modalVisible && (\n              <Modal\n                show\n                handleClose={() =>\n                  this.setState({\n                    modalVisible: false,\n                    selectedSubject: null,\n                    selectedDate: null,\n                    selectedTime: null,\n                  })\n                }\n                onConfirm={() => this.createAppointment()}\n                onConfirmDisabled={!selectedDate || !selectedTime}\n                title='Select date for appointment'\n              >\n                {this.renderModal()}\n              </Modal>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSubjects: (params) => dispatch(getSubjects(params)),\n  getCategory: () => dispatch(getCategory()),\n  createAppointment: (data, history) =>\n    dispatch(createAppointment(data, history)),\n});\n\nconst mapStateToProps = (state) => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading,\n  categories: state.category.category,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);\n"]},"metadata":{},"sourceType":"module"}