{"ast":null,"code":"import { GET_APPOINTMENTS, GET_APPOINTMENT, APPOINTMENT_ERROR, DELETE_APPOINTMENT, ADD_APPOINTMENT, APPROVE_APPOINTMENT, CANCEL_APPOINTMENT } from '../actions/types';\nconst initialState = {\n  appointments: [],\n  appointment: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_APPOINTMENTS:\n      return { ...state,\n        appointments: payload,\n        loading: false\n      };\n\n    case GET_APPOINTMENT:\n      return { ...state,\n        appointment: payload,\n        loading: false\n      };\n\n    case ADD_APPOINTMENT:\n      return { ...state,\n        appointments: [payload, ...state.appointments],\n        loading: false\n      };\n\n    case CANCEL_APPOINTMENT:\n    case APPROVE_APPOINTMENT:\n      return { ...state,\n        appointments: state.appointments.map(appointment => appointment._id === payload.id ? { ...appointment\n        } : appointment),\n        loading: false\n      };\n    //fix delete\n\n    case DELETE_APPOINTMENT:\n      return { ...state,\n        appointments: state.appointments.filter(appointment => appointment._id !== payload),\n        loading: false\n      };\n\n    case APPOINTMENT_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/reducers/appointments.js"],"names":["GET_APPOINTMENTS","GET_APPOINTMENT","APPOINTMENT_ERROR","DELETE_APPOINTMENT","ADD_APPOINTMENT","APPROVE_APPOINTMENT","CANCEL_APPOINTMENT","initialState","appointments","appointment","loading","error","state","action","type","payload","map","_id","id","filter"],"mappings":"AAAA,SACEA,gBADF,EAEEC,eAFF,EAGEC,iBAHF,EAIEC,kBAJF,EAKEC,eALF,EAMEC,mBANF,EAOEC,kBAPF,QAQO,kBARP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,YAAY,EAAE,EADK;AAEnBC,EAAAA,WAAW,EAAE,IAFM;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKd,gBAAL;AACE,aAAO,EACL,GAAGY,KADE;AAELJ,QAAAA,YAAY,EAAEO,OAFT;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKT,eAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELH,QAAAA,WAAW,EAAEM,OAFR;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKN,eAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,YAAY,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,YAAnB,CAFT;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,kBAAL;AACA,SAAKD,mBAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,YAAY,EAAEI,KAAK,CAACJ,YAAN,CAAmBQ,GAAnB,CAAwBP,WAAD,IACnCA,WAAW,CAACQ,GAAZ,KAAoBF,OAAO,CAACG,EAA5B,GAAiC,EAAE,GAAGT;AAAL,SAAjC,GAAsDA,WAD1C,CAFT;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;AAOF;;AACA,SAAKP,kBAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,YAAY,EAAEI,KAAK,CAACJ,YAAN,CAAmBW,MAAnB,CACXV,WAAD,IAAiBA,WAAW,CAACQ,GAAZ,KAAoBF,OADzB,CAFT;AAKLL,QAAAA,OAAO,EAAE;AALJ,OAAP;;AAOF,SAAKR,iBAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELD,QAAAA,KAAK,EAAEI,OAFF;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOE,KAAP;AA5CJ;AA8CD","sourcesContent":["import {\n  GET_APPOINTMENTS,\n  GET_APPOINTMENT,\n  APPOINTMENT_ERROR,\n  DELETE_APPOINTMENT,\n  ADD_APPOINTMENT,\n  APPROVE_APPOINTMENT,\n  CANCEL_APPOINTMENT,\n} from '../actions/types';\nconst initialState = {\n  appointments: [],\n  appointment: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_APPOINTMENTS:\n      return {\n        ...state,\n        appointments: payload,\n        loading: false,\n      };\n    case GET_APPOINTMENT:\n      return {\n        ...state,\n        appointment: payload,\n        loading: false,\n      };\n    case ADD_APPOINTMENT:\n      return {\n        ...state,\n        appointments: [payload, ...state.appointments],\n        loading: false,\n      };\n    case CANCEL_APPOINTMENT:\n    case APPROVE_APPOINTMENT:\n      return {\n        ...state,\n        appointments: state.appointments.map((appointment) =>\n          appointment._id === payload.id ? { ...appointment } : appointment\n        ),\n        loading: false,\n      };\n    //fix delete\n    case DELETE_APPOINTMENT:\n      return {\n        ...state,\n        appointments: state.appointments.filter(\n          (appointment) => appointment._id !== payload\n        ),\n        loading: false,\n      };\n    case APPOINTMENT_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}