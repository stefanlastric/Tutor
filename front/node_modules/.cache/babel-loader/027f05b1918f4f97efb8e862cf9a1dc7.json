{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { GET_APPOINTMENT, GET_APPOINTMENTS, APPOINTMENT_ERROR, DELETE_APPOINTMENT, APPROVE_APPOINTMENT_REQUEST, APPROVE_APPOINTMENT_SUCCESS, APPROVE_APPOINTMENT_FAIL, CANCEL_APPOINTMENT_REQUEST, CANCEL_APPOINTMENT_SUCCESS, CANCEL_APPOINTMENT_FAIL, ADD_APPOINTMENT } from './types'; //Approve appointment\n\nexport const approveAppointment = id => async dispatch => {\n  try {\n    dispatch({\n      type: APPROVE_APPOINTMENT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.patch(`/appointments/approve/${id}`, null, config); // alert('Appointment successfully approved.');\n\n    dispatch({\n      type: APPROVE_APPOINTMENT_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setAlert('Appointment Approved', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPROVE_APPOINTMENT_FAIL,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // Cancel appointment\n\nexport const cancelAppointment = id => async dispatch => {\n  try {\n    dispatch({\n      type: CANCEL_APPOINTMENT_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.patch(`/appointments/cancel/${id}`);\n    dispatch({\n      type: CANCEL_APPOINTMENT_SUCCESS,\n      payload: res.data\n    });\n    dispatch(setAlert('Appointment Canceled', 'success'));\n  } catch (err) {\n    dispatch({\n      type: CANCEL_APPOINTMENT_FAIL,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; //Get all appointments\n\nexport const getAppointments = () => async dispatch => {\n  try {\n    const res = await axios.get('/appointments');\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Get all AppointmentsStudent\n\nexport const getAppointmentsStudent = () => async dispatch => {\n  try {\n    const res = await axios.get('/appointments/student');\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Get all AppointmentsTeacher\n\nexport const getAppointmentsTeacher = () => async dispatch => {\n  try {\n    const res = await axios.get('/appointments/teacher');\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Get appointments by ID\n\nexport const getAppointmentsById = userId => async dispatch => {\n  try {\n    const res = await axios.get(`/appointments/user/${userId}`);\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Create or update appointments\n\nexport const createAppointment = (formData, history, edit = false) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/appointments', formData, config);\n    dispatch({\n      type: ADD_APPOINTMENT,\n      payload: res.data\n    });\n    alert('Appointment successfully requested.'); // dispatch(\n    //   setAlert(edit ? 'Appointment Updated' : 'Appointment Created', 'success')\n    // );\n    // if (!edit) {\n    //   history.push('/');\n    // }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response,\n        status: err.response\n      }\n    });\n  }\n}; //Delete appointments\n\nexport const deleteAppointment = id => async dispatch => {\n  try {\n    await axios.delete(`/appointments/${id}`);\n    dispatch({\n      type: DELETE_APPOINTMENT,\n      payload: id\n    });\n    dispatch(setAlert('Appointment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/actions/appointment.js"],"names":["axios","setAlert","GET_APPOINTMENT","GET_APPOINTMENTS","APPOINTMENT_ERROR","DELETE_APPOINTMENT","APPROVE_APPOINTMENT_REQUEST","APPROVE_APPOINTMENT_SUCCESS","APPROVE_APPOINTMENT_FAIL","CANCEL_APPOINTMENT_REQUEST","CANCEL_APPOINTMENT_SUCCESS","CANCEL_APPOINTMENT_FAIL","ADD_APPOINTMENT","approveAppointment","id","dispatch","type","config","headers","res","patch","payload","data","err","msg","response","statusText","status","cancelAppointment","getAppointments","get","getAppointmentsStudent","getAppointmentsTeacher","getAppointmentsById","userId","createAppointment","formData","history","edit","post","alert","errors","forEach","error","deleteAppointment","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\n\nimport {\n  GET_APPOINTMENT,\n  GET_APPOINTMENTS,\n  APPOINTMENT_ERROR,\n  DELETE_APPOINTMENT,\n  APPROVE_APPOINTMENT_REQUEST,\n  APPROVE_APPOINTMENT_SUCCESS,\n  APPROVE_APPOINTMENT_FAIL,\n  CANCEL_APPOINTMENT_REQUEST,\n  CANCEL_APPOINTMENT_SUCCESS,\n  CANCEL_APPOINTMENT_FAIL,\n  ADD_APPOINTMENT,\n} from './types';\n\n//Approve appointment\nexport const approveAppointment = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: APPROVE_APPOINTMENT_REQUEST,\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const res = await axios.patch(`/appointments/approve/${id}`, null, config);\n    // alert('Appointment successfully approved.');\n    dispatch({\n      type: APPROVE_APPOINTMENT_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(setAlert('Appointment Approved', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPROVE_APPOINTMENT_FAIL,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n// Cancel appointment\nexport const cancelAppointment = (id) => async (dispatch) => {\n  try {\n    dispatch({\n      type: CANCEL_APPOINTMENT_REQUEST,\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n    const res = await axios.patch(`/appointments/cancel/${id}`);\n\n    dispatch({\n      type: CANCEL_APPOINTMENT_SUCCESS,\n      payload: res.data,\n    });\n    dispatch(setAlert('Appointment Canceled', 'success'));\n  } catch (err) {\n    dispatch({\n      type: CANCEL_APPOINTMENT_FAIL,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n\n//Get all appointments\nexport const getAppointments = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/appointments');\n\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Get all AppointmentsStudent\nexport const getAppointmentsStudent = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/appointments/student');\n\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Get all AppointmentsTeacher\nexport const getAppointmentsTeacher = () => async (dispatch) => {\n  try {\n    const res = await axios.get('/appointments/teacher');\n\n    dispatch({\n      type: GET_APPOINTMENTS,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Get appointments by ID\nexport const getAppointmentsById = (userId) => async (dispatch) => {\n  try {\n    const res = await axios.get(`/appointments/user/${userId}`);\n\n    dispatch({\n      type: GET_APPOINTMENT,\n      payload: res.data,\n    });\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Create or update appointments\nexport const createAppointment = (formData, history, edit = false) => async (\n  dispatch\n) => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    };\n\n    const res = await axios.post('/appointments', formData, config);\n\n    dispatch({\n      type: ADD_APPOINTMENT,\n      payload: res.data,\n    });\n    alert('Appointment successfully requested.');\n    // dispatch(\n    //   setAlert(edit ? 'Appointment Updated' : 'Appointment Created', 'success')\n    // );\n\n    // if (!edit) {\n    //   history.push('/');\n    // }\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response, status: err.response },\n    });\n  }\n};\n\n//Delete appointments\n\nexport const deleteAppointment = (id) => async (dispatch) => {\n  try {\n    await axios.delete(`/appointments/${id}`);\n\n    dispatch({\n      type: DELETE_APPOINTMENT,\n      payload: id,\n    });\n\n    dispatch(setAlert('Appointment Removed', 'success'));\n  } catch (err) {\n    dispatch({\n      type: APPOINTMENT_ERROR,\n      payload: { msg: err.response.statusText, status: err.response.status },\n    });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}