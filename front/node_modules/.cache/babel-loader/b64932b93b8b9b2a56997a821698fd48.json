{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/Subjects.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getSubjects } from '../../actions/subject';\nimport './Subjects.css';\nimport Moment from 'react-moment';\nimport { createAppointment } from '../../actions/appointment';\nconst headers = [{\n  key: 'title',\n  label: 'Title'\n}, {\n  key: 'priceperhour',\n  label: 'Price per hour'\n}, {\n  key: 'available',\n  label: 'Available'\n}, {\n  key: 'datecreated',\n  label: 'Date Created'\n}, {\n  key: 'actions',\n  label: 'Actions'\n}];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\n\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createAppointment = subject => {\n      const {\n        createAppointment,\n        history\n      } = this.props;\n      const data = {\n        subjectId: subject._id,\n        teacherId: subject.createdby\n      };\n      createAppointment(data, history);\n    };\n\n    this.getSubjects = () => {\n      const {\n        getSubjects\n      } = this.props;\n      getSubjects();\n    };\n\n    this.getTableOptions = () => {\n      const options = {\n        customComponents: {\n          actions: {\n            component: data => /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.createAppointment(data),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 15\n              }\n            }, \"Request Appointment\"))\n          },\n          available: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.available));\n            }\n          },\n          datecreated: {\n            component: rowData => {\n              console.log(rowData);\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Moment, {\n                format: \"DD/MMM/YYYY hh:mm:ss\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 17\n                }\n              }, rowData.createdAt));\n            }\n          }\n        }\n      };\n      return options;\n    };\n\n    this.state = {\n      subjects: []\n    };\n  }\n\n  componentDidMount() {\n    this.getSubjects();\n  }\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      subjects,\n      isLoading\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subjects_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 23\n      }\n    }, \"Loading..\"), subjects && /*#__PURE__*/React.createElement(Table, {\n      data: subjects,\n      headers: headers,\n      options: this.getTableOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getSubjects: () => dispatch(getSubjects()),\n  createAppointment: (data, history) => dispatch(createAppointment(data, history))\n});\n\nconst mapStateToProps = state => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/Subjects.js"],"names":["React","Component","connect","Table","getSubjects","Moment","createAppointment","headers","key","label","formatYesNo","value","Subjects","constructor","props","subject","history","data","subjectId","_id","teacherId","createdby","getTableOptions","options","customComponents","actions","component","available","rowData","datecreated","console","log","createdAt","state","subjects","componentDidMount","nextPath","path","push","render","isLoading","mapDispatchToProps","dispatch","mapStateToProps","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AAEA,SAASC,iBAAT,QAAkC,2BAAlC;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,GAAG,EAAE,OADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,GAAG,EAAE,cADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALc,EAUd;AACED,EAAAA,GAAG,EAAE,WADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAVc,EAcd;AACED,EAAAA,GAAG,EAAE,aADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAdc,EAkBd;AACED,EAAAA,GAAG,EAAE,SADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAlBc,CAAhB;;AAwBA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAOA,KAAK,IAAI,CAAT,GAAa,IAAb,GAAoB,KAA3B;AACD;;AACD,MAAMC,QAAN,SAAuBX,SAAvB,CAAiC;AAC/BY,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUnBR,iBAVmB,GAUES,OAAD,IAAa;AAC/B,YAAM;AAAET,QAAAA,iBAAF;AAAqBU,QAAAA;AAArB,UAAiC,KAAKF,KAA5C;AAEA,YAAMG,IAAI,GAAG;AACXC,QAAAA,SAAS,EAAEH,OAAO,CAACI,GADR;AAEXC,QAAAA,SAAS,EAAEL,OAAO,CAACM;AAFR,OAAb;AAIAf,MAAAA,iBAAiB,CAACW,IAAD,EAAOD,OAAP,CAAjB;AACD,KAlBkB;;AAAA,SAwBnBZ,WAxBmB,GAwBL,MAAM;AAClB,YAAM;AAAEA,QAAAA;AAAF,UAAkB,KAAKU,KAA7B;AACAV,MAAAA,WAAW;AACZ,KA3BkB;;AAAA,SA6BnBkB,eA7BmB,GA6BD,MAAM;AACtB,YAAMC,OAAO,GAAG;AACdC,QAAAA,gBAAgB,EAAE;AAChBC,UAAAA,OAAO,EAAE;AACPC,YAAAA,SAAS,EAAGT,IAAD,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAQ,cAAA,OAAO,EAAE,MAAM,KAAKX,iBAAL,CAAuBW,IAAvB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF;AAFK,WADO;AAUhBU,UAAAA,SAAS,EAAE;AACTD,YAAAA,SAAS,EAAGE,OAAD,IAAa;AACtB,kCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAMlB,WAAW,CAACkB,OAAO,CAACD,SAAT,CAAjB,CAAP;AACD;AAHQ,WAVK;AAehBE,UAAAA,WAAW,EAAE;AACXH,YAAAA,SAAS,EAAGE,OAAD,IAAa;AACtBE,cAAAA,OAAO,CAACC,GAAR,CAAYH,OAAZ;AACA,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE,oBAAC,MAAD;AAAQ,gBAAA,MAAM,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACGA,OAAO,CAACI,SADX,CADF,CADF;AAOD;AAVU;AAfG;AADJ,OAAhB;AA+BA,aAAOT,OAAP;AACD,KA9DkB;;AAEjB,SAAKU,KAAL,GAAa;AACXC,MAAAA,QAAQ,EAAE;AADC,KAAb;AAGD;;AACDC,EAAAA,iBAAiB,GAAG;AAClB,SAAK/B,WAAL;AACD;;AAYDgC,EAAAA,QAAQ,CAACC,IAAD,EAAO;AACb,SAAKvB,KAAL,CAAWE,OAAX,CAAmBsB,IAAnB,CAAwBD,IAAxB;AACD;;AAyCDE,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEL,MAAAA,QAAF;AAAYM,MAAAA;AAAZ,QAA0B,KAAK1B,KAArC;AAEA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG0B,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADhB,EAEGN,QAAQ,iBACP,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEA,QADR;AAEE,MAAA,OAAO,EAAE3B,OAFX;AAGE,MAAA,OAAO,EAAE,KAAKe,eAAL,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CADF;AAYD;;AA/E8B;;AAkFjC,MAAMmB,kBAAkB,GAAIC,QAAD,KAAe;AACxCtC,EAAAA,WAAW,EAAE,MAAMsC,QAAQ,CAACtC,WAAW,EAAZ,CADa;AAExCE,EAAAA,iBAAiB,EAAE,CAACW,IAAD,EAAOD,OAAP,KACjB0B,QAAQ,CAACpC,iBAAiB,CAACW,IAAD,EAAOD,OAAP,CAAlB;AAH8B,CAAf,CAA3B;;AAMA,MAAM2B,eAAe,GAAIV,KAAD,KAAY;AAClCC,EAAAA,QAAQ,EAAED,KAAK,CAACC,QAAN,CAAeA,QADS;AAElCM,EAAAA,SAAS,EAAEP,KAAK,CAACC,QAAN,CAAeU;AAFQ,CAAZ,CAAxB;;AAKA,eAAe1C,OAAO,CAACyC,eAAD,EAAkBF,kBAAlB,CAAP,CAA6C7B,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getSubjects } from '../../actions/subject';\nimport './Subjects.css';\nimport Moment from 'react-moment';\n\nimport { createAppointment } from '../../actions/appointment';\n\nconst headers = [\n  {\n    key: 'title',\n    label: 'Title',\n  },\n  {\n    key: 'priceperhour',\n    label: 'Price per hour',\n  },\n\n  {\n    key: 'available',\n    label: 'Available',\n  },\n  {\n    key: 'datecreated',\n    label: 'Date Created',\n  },\n  {\n    key: 'actions',\n    label: 'Actions',\n  },\n];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subjects: [],\n    };\n  }\n  componentDidMount() {\n    this.getSubjects();\n  }\n\n  createAppointment = (subject) => {\n    const { createAppointment, history } = this.props;\n\n    const data = {\n      subjectId: subject._id,\n      teacherId: subject.createdby,\n    };\n    createAppointment(data, history);\n  };\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  getSubjects = () => {\n    const { getSubjects } = this.props;\n    getSubjects();\n  };\n\n  getTableOptions = () => {\n    const options = {\n      customComponents: {\n        actions: {\n          component: (data) => (\n            <div>\n              <button onClick={() => this.createAppointment(data)}>\n                Request Appointment\n              </button>\n            </div>\n          ),\n        },\n        available: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.available)}</div>;\n          },\n        },\n        datecreated: {\n          component: (rowData) => {\n            console.log(rowData);\n            return (\n              <div>\n                <Moment format='DD/MMM/YYYY hh:mm:ss'>\n                  {rowData.createdAt}\n                </Moment>\n              </div>\n            );\n          },\n        },\n      },\n    };\n\n    return options;\n  };\n  render() {\n    const { subjects, isLoading } = this.props;\n\n    return (\n      <div className='subjects_table'>\n        {isLoading && <div>Loading..</div>}\n        {subjects && (\n          <Table\n            data={subjects}\n            headers={headers}\n            options={this.getTableOptions()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSubjects: () => dispatch(getSubjects()),\n  createAppointment: (data, history) =>\n    dispatch(createAppointment(data, history)),\n});\n\nconst mapStateToProps = (state) => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);\n"]},"metadata":{},"sourceType":"module"}