{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/appointments/AppointmentsStudent.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport Table from '../table/Table';\nimport { getAppointmentsStudent, cancelAppointment, createAppointment } from '../../actions/appointment';\nimport './Appointments.css';\nimport Moment from 'react-moment';\nimport Modal from '../modal/Modal';\nconst headers = [{\n  key: 'subject',\n  label: 'Subject'\n}, {\n  key: 'teacher',\n  label: 'Teacher'\n}, {\n  key: 'timelimit',\n  label: 'Timelimit'\n}, {\n  key: 'approved',\n  label: 'Approved'\n}, {\n  key: 'createdby',\n  label: 'Created by'\n}, {\n  key: 'canceled',\n  label: 'Canceled'\n}, {\n  key: 'datecreated',\n  label: 'Date Created'\n}, {\n  key: 'actions',\n  label: 'Actions'\n}];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\n\nclass Appointments extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getAppointmentsStudent = () => {\n      const {\n        getAppointmentsStudent\n      } = this.props;\n      getAppointmentsStudent();\n    };\n\n    this.cancelAppointment = id => {\n      const {\n        cancelAppointment\n      } = this.props;\n      const {\n        selectedSubject\n      } = this.state;\n      cancelAppointment(id);\n    };\n\n    this.getTableOptions = () => {\n      const {} = this.props;\n      const options = {\n        customComponents: {\n          actions: {\n            component: rowData => /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 13\n              }\n            }, rowData.canceled ? 'Canceled' :\n            /*#__PURE__*/\n            // <button onClick={() => this.cancelAppointment(rowData._id)}>\n            //   Cancel Appointment\n            // </button>\n            React.createElement(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => this.setState({\n                modalVisible: true,\n                selectedSubject: data\n              }),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }\n            }, \"Cancel Appointment\"))\n          },\n          datecreated: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Moment, {\n                format: \"DD/MMM/YYYY hh:mm:ss\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 17\n                }\n              }, rowData.datecreated));\n            }\n          },\n          approved: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.approved));\n            }\n          },\n          canceled: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.canceled));\n            }\n          },\n          subject: {\n            component: rowData => {\n              if (rowData.subject != null) return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 22\n                }\n              }, rowData.subject.title);\n            }\n          },\n          teacher: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 15\n                }\n              }, rowData && rowData.teacher && rowData.teacher.name);\n            }\n          },\n          createdby: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 15\n                }\n              }, rowData && rowData.createdby && rowData.createdby.name);\n            }\n          }\n        }\n      };\n      return options;\n    };\n\n    this.state = {\n      appointments: [],\n      modalVisible: false\n    };\n  }\n\n  componentDidMount() {\n    this.getAppointmentsStudent();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      isLoading,\n      approved,\n      canceled\n    } = this.props;\n\n    if (prevProps.isLoading && !isLoading && (!isEmpty(approved) || !isEmpty(canceled))) {\n      this.getAppointmentsStudent();\n    }\n  }\n\n  render() {\n    const {\n      appointments,\n      isLoading\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"appointments_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 7\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 23\n      }\n    }, \"Loading..\"), appointments && /*#__PURE__*/React.createElement(Table, {\n      data: appointments,\n      headers: headers,\n      options: this.getTableOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getAppointmentsStudent: () => dispatch(getAppointmentsStudent()),\n  cancelAppointment: id => dispatch(cancelAppointment(id)),\n  createAppointments: (data, history) => dispatch(createAppointment(data, history))\n});\n\nconst mapStateToProps = state => ({\n  appointments: state.appointments.appointments,\n  isLoading: state.appointments.loading,\n  approved: state.appointments.approved,\n  canceled: state.appointments.canceled\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Appointments);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/appointments/AppointmentsStudent.js"],"names":["React","Component","connect","isEmpty","Table","getAppointmentsStudent","cancelAppointment","createAppointment","Moment","Modal","headers","key","label","formatYesNo","value","Appointments","constructor","props","id","selectedSubject","state","getTableOptions","options","customComponents","actions","component","rowData","canceled","setState","modalVisible","data","datecreated","approved","subject","title","teacher","name","createdby","appointments","componentDidMount","componentDidUpdate","prevProps","isLoading","render","mapDispatchToProps","dispatch","createAppointments","history","mapStateToProps","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { isEmpty } from 'lodash';\nimport Table from '../table/Table';\nimport {\n  getAppointmentsStudent,\n  cancelAppointment,\n  createAppointment,\n} from '../../actions/appointment';\nimport './Appointments.css';\nimport Moment from 'react-moment';\nimport Modal from '../modal/Modal';\n\nconst headers = [\n  {\n    key: 'subject',\n    label: 'Subject',\n  },\n  {\n    key: 'teacher',\n    label: 'Teacher',\n  },\n  {\n    key: 'timelimit',\n    label: 'Timelimit',\n  },\n  {\n    key: 'approved',\n    label: 'Approved',\n  },\n  {\n    key: 'createdby',\n    label: 'Created by',\n  },\n  {\n    key: 'canceled',\n    label: 'Canceled',\n  },\n\n  {\n    key: 'datecreated',\n    label: 'Date Created',\n  },\n\n  {\n    key: 'actions',\n    label: 'Actions',\n  },\n];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\n\nclass Appointments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      appointments: [],\n      modalVisible: false,\n    };\n  }\n  componentDidMount() {\n    this.getAppointmentsStudent();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isLoading, approved, canceled } = this.props;\n    if (\n      prevProps.isLoading &&\n      !isLoading &&\n      (!isEmpty(approved) || !isEmpty(canceled))\n    ) {\n      this.getAppointmentsStudent();\n    }\n  }\n  getAppointmentsStudent = () => {\n    const { getAppointmentsStudent } = this.props;\n    getAppointmentsStudent();\n  };\n  cancelAppointment = (id) => {\n    const { cancelAppointment } = this.props;\n    const { selectedSubject } = this.state;\n    cancelAppointment(id);\n  };\n  getTableOptions = () => {\n    const {} = this.props;\n    const options = {\n      customComponents: {\n        actions: {\n          component: (rowData) => (\n            <div>\n              {rowData.canceled ? (\n                'Canceled'\n              ) : (\n                // <button onClick={() => this.cancelAppointment(rowData._id)}>\n                //   Cancel Appointment\n                // </button>\n                <button\n                  className='btn btn-secondary'\n                  onClick={() =>\n                    this.setState({ modalVisible: true, selectedSubject: data })\n                  }\n                >\n                  Cancel Appointment\n                </button>\n              )}\n            </div>\n          ),\n        },\n        datecreated: {\n          component: (rowData) => {\n            return (\n              <div>\n                <Moment format='DD/MMM/YYYY hh:mm:ss'>\n                  {rowData.datecreated}\n                </Moment>\n              </div>\n            );\n          },\n        },\n        approved: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.approved)}</div>;\n          },\n        },\n        canceled: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.canceled)}</div>;\n          },\n        },\n        subject: {\n          component: (rowData) => {\n            if (rowData.subject != null)\n              return <div>{rowData.subject.title}</div>;\n          },\n        },\n        teacher: {\n          component: (rowData) => {\n            return (\n              <div>{rowData && rowData.teacher && rowData.teacher.name}</div>\n            );\n          },\n        },\n        createdby: {\n          component: (rowData) => {\n            return (\n              <div>\n                {rowData && rowData.createdby && rowData.createdby.name}\n              </div>\n            );\n          },\n        },\n      },\n    };\n\n    return options;\n  };\n  render() {\n    const { appointments, isLoading } = this.props;\n    return (\n      <div className='appointments_table'>\n        {isLoading && <div>Loading..</div>}\n        {appointments && (\n          <Table\n            data={appointments}\n            headers={headers}\n            options={this.getTableOptions()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getAppointmentsStudent: () => dispatch(getAppointmentsStudent()),\n  cancelAppointment: (id) => dispatch(cancelAppointment(id)),\n  createAppointments: (data, history) =>\n    dispatch(createAppointment(data, history)),\n});\n\nconst mapStateToProps = (state) => ({\n  appointments: state.appointments.appointments,\n  isLoading: state.appointments.loading,\n  approved: state.appointments.approved,\n  canceled: state.appointments.canceled,\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Appointments);\n"]},"metadata":{},"sourceType":"module"}