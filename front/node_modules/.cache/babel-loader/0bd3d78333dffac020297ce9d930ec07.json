{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/teachers/TeachersStudents.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getTeachers } from '../../actions/teachers';\nimport './Teachers.css';\nimport Moment from 'react-moment';\nimport Modal from '../modal/Modal';\nimport DatePicker from 'react-datepicker';\nimport TimePicker from 'react-times';\nimport { createAppointment } from '../../actions/appointment';\nimport Select from 'react-select'; // use material theme\n\nimport 'react-times/css/material/default.css'; // or you can use classic theme\n\nimport 'react-times/css/classic/default.css';\nconst headers = [{\n  key: 'name',\n  label: 'Name'\n}, {\n  key: 'surname',\n  label: 'Surname'\n}, {\n  key: 'education',\n  label: 'Education'\n}, {\n  key: 'qualification',\n  label: 'Qualification'\n}, {\n  key: 'suspended',\n  label: 'Suspended'\n}, {\n  key: 'date',\n  label: 'Date created'\n}, {\n  key: 'actions',\n  label: 'Actions'\n}];\n\nfunction formatYesNo(value) {\n  return !value ? 'No' : 'Yes';\n}\n\nclass Teachers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createAppointment = () => {\n      const {\n        createAppointment,\n        history\n      } = this.props;\n      const {\n        selectedTeacher,\n        selectedDate,\n        selectedTime,\n        selectedSubject\n      } = this.state;\n      const date = new Date(selectedDate.getUTCFullYear(), selectedDate.getUTCMonth(), selectedDate.getUTCDate() + 1, selectedTime.hour, selectedTime.minute, 0, 0);\n      const data = {\n        subjectId: selectedSubject.value,\n        teacherId: selectedTeacher._id,\n        requestedDate: date\n      };\n      createAppointment(data, history);\n    };\n\n    this.getTeachers = () => {\n      const {\n        getTeachers\n      } = this.props;\n      getTeachers();\n    };\n\n    this.getTableOptions = () => {\n      const options = {\n        customComponents: {\n          actions: {\n            component: data => /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => this.setState({\n                modalVisible: true,\n                selectedTeacher: data\n              }),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }\n            }, \"Request Appointment\"))\n          },\n          date: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Moment, {\n                format: \"DD/MMM/YYYY hh:mm:ss\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 17\n                }\n              }, rowData.datecreated));\n            }\n          },\n          suspended: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.suspended));\n            }\n          }\n        }\n      };\n      return options;\n    };\n\n    this.handleDateChange = selectedDate => {\n      this.setState({\n        selectedDate\n      });\n    };\n\n    this.handleTimeChange = selectedTime => {\n      this.setState({\n        selectedTime\n      });\n    };\n\n    this.mapTeacherSubjects = subjects => subjects.map(subject => ({\n      value: subject.title,\n      label: subject\n    }));\n\n    this.handleSelectChange = selectedSubject => {\n      this.setState({\n        selectedSubject\n      });\n    };\n\n    this.renderModal = () => {\n      const {\n        selectedDate,\n        selectedTime,\n        selectedTeacher\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"appointment_date_modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 9\n        }\n      }, \"Choose subject\"), selectedTeacher && /*#__PURE__*/React.createElement(Select, {\n        options: selectedTeacher.subject && selectedTeacher.subject.length > 0 ? this.mapTeacherSubjects(selectedTeacher.subject) : [],\n        onChange: this.handleSelectChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }\n      }, \"Choose Date:\"), /*#__PURE__*/React.createElement(DatePicker, {\n        selected: selectedDate,\n        onChange: this.handleDateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 9\n        }\n      }, \"Choose Time:\"), /*#__PURE__*/React.createElement(TimePicker, {\n        time: selectedTime && `${selectedTime.hour}:${selectedTime.minute}`,\n        onTimeChange: this.handleTimeChange,\n        theme: \"classic\",\n        timeMode: \"24\" // use 24 or 12 hours mode, default 24\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.state = {\n      teachers: [],\n      modalVisible: false,\n      selectedTeacher: null,\n      selectedDate: null,\n      selectedTime: '10:00',\n      selectedSubject: null\n    };\n  }\n\n  componentDidMount() {\n    this.getTeachers();\n  }\n\n  render() {\n    const {\n      teachers,\n      isLoading\n    } = this.props;\n    const {\n      modalVisible,\n      selectedTeacher,\n      selectedDate,\n      selectedTime,\n      selectedSubject\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subjects_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 7\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 23\n      }\n    }, \"Loading..\"), teachers && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      data: teachers,\n      headers: headers,\n      options: this.getTableOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 13\n      }\n    }), modalVisible && /*#__PURE__*/React.createElement(Modal, {\n      show: true,\n      handleClose: () => this.setState({\n        modalVisible: false,\n        selectedTeacher: null,\n        selectedDate: null,\n        selectedTime: null,\n        selectedSubject: null\n      }),\n      onConfirm: () => this.createAppointment(),\n      onConfirmDisabled: !selectedDate || !selectedTime || !selectedSubject,\n      title: \"Select date for appointment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 15\n      }\n    }, this.renderModal())));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getTeachers: () => dispatch(getTeachers()),\n  createAppointment: (data, history) => dispatch(createAppointment(data, history))\n});\n\nconst mapStateToProps = state => ({\n  teachers: state.teachers.teachers,\n  isLoading: state.teachers.loading,\n  suspended: state.teachers.suspended\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Teachers);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/teachers/TeachersStudents.js"],"names":["React","Component","connect","Table","getTeachers","Moment","Modal","DatePicker","TimePicker","createAppointment","Select","headers","key","label","formatYesNo","value","Teachers","constructor","props","history","selectedTeacher","selectedDate","selectedTime","selectedSubject","state","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","hour","minute","data","subjectId","teacherId","_id","requestedDate","getTableOptions","options","customComponents","actions","component","setState","modalVisible","rowData","datecreated","suspended","handleDateChange","handleTimeChange","mapTeacherSubjects","subjects","map","subject","title","handleSelectChange","renderModal","length","teachers","componentDidMount","render","isLoading","mapDispatchToProps","dispatch","mapStateToProps","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getTeachers } from '../../actions/teachers';\nimport './Teachers.css';\nimport Moment from 'react-moment';\nimport Modal from '../modal/Modal';\nimport DatePicker from 'react-datepicker';\nimport TimePicker from 'react-times';\nimport { createAppointment } from '../../actions/appointment';\nimport Select from 'react-select';\n// use material theme\nimport 'react-times/css/material/default.css';\n// or you can use classic theme\nimport 'react-times/css/classic/default.css';\n\nconst headers = [\n  {\n    key: 'name',\n    label: 'Name',\n  },\n  {\n    key: 'surname',\n    label: 'Surname',\n  },\n  {\n    key: 'education',\n    label: 'Education',\n  },\n  {\n    key: 'qualification',\n    label: 'Qualification',\n  },\n  {\n    key: 'suspended',\n    label: 'Suspended',\n  },\n\n  {\n    key: 'date',\n    label: 'Date created',\n  },\n  {\n    key: 'actions',\n    label: 'Actions',\n  },\n];\n\nfunction formatYesNo(value) {\n  return !value ? 'No' : 'Yes';\n}\nclass Teachers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teachers: [],\n      modalVisible: false,\n      selectedTeacher: null,\n      selectedDate: null,\n      selectedTime: '10:00',\n      selectedSubject: null,\n    };\n  }\n  componentDidMount() {\n    this.getTeachers();\n  }\n  createAppointment = () => {\n    const { createAppointment, history } = this.props;\n    const {\n      selectedTeacher,\n      selectedDate,\n      selectedTime,\n      selectedSubject,\n    } = this.state;\n\n    const date = new Date(\n      selectedDate.getUTCFullYear(),\n      selectedDate.getUTCMonth(),\n      selectedDate.getUTCDate() + 1,\n      selectedTime.hour,\n      selectedTime.minute,\n      0,\n      0\n    );\n    const data = {\n      subjectId: selectedSubject.value,\n      teacherId: selectedTeacher._id,\n      requestedDate: date,\n    };\n\n    createAppointment(data, history);\n  };\n\n  getTeachers = () => {\n    const { getTeachers } = this.props;\n    getTeachers();\n  };\n\n  getTableOptions = () => {\n    const options = {\n      customComponents: {\n        actions: {\n          component: (data) => (\n            <div>\n              <button\n                className='btn btn-secondary'\n                onClick={() =>\n                  this.setState({\n                    modalVisible: true,\n                    selectedTeacher: data,\n                  })\n                }\n              >\n                Request Appointment\n              </button>\n            </div>\n          ),\n        },\n        date: {\n          component: (rowData) => {\n            return (\n              <div>\n                <Moment format='DD/MMM/YYYY hh:mm:ss'>\n                  {rowData.datecreated}\n                </Moment>\n              </div>\n            );\n          },\n        },\n        suspended: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.suspended)}</div>;\n          },\n        },\n      },\n    };\n\n    return options;\n  };\n\n  handleDateChange = (selectedDate) => {\n    this.setState({ selectedDate });\n  };\n\n  handleTimeChange = (selectedTime) => {\n    this.setState({ selectedTime });\n  };\n\n  mapTeacherSubjects = (subjects) =>\n    subjects.map((subject) => ({\n      value: subject.title,\n      label: subject,\n    }));\n\n  handleSelectChange = (selectedSubject) => {\n    this.setState({ selectedSubject });\n  };\n\n  renderModal = () => {\n    const { selectedDate, selectedTime, selectedTeacher } = this.state;\n    return (\n      <div className='appointment_date_modal'>\n        <span>Choose subject</span>\n        {selectedTeacher && (\n          <Select\n            options={\n              selectedTeacher.subject && selectedTeacher.subject.length > 0\n                ? this.mapTeacherSubjects(selectedTeacher.subject)\n                : []\n            }\n            onChange={this.handleSelectChange}\n          />\n        )}\n        <span>Choose Date:</span>\n        <DatePicker selected={selectedDate} onChange={this.handleDateChange} />\n        <span>Choose Time:</span>\n        <TimePicker\n          time={selectedTime && `${selectedTime.hour}:${selectedTime.minute}`}\n          onTimeChange={this.handleTimeChange}\n          theme='classic'\n          timeMode='24' // use 24 or 12 hours mode, default 24\n        />\n      </div>\n    );\n  };\n  render() {\n    const { teachers, isLoading } = this.props;\n    const {\n      modalVisible,\n      selectedTeacher,\n      selectedDate,\n      selectedTime,\n      selectedSubject,\n    } = this.state;\n\n    return (\n      <div className='subjects_table'>\n        {isLoading && <div>Loading..</div>}\n        {teachers && (\n          <div>\n            <Table\n              data={teachers}\n              headers={headers}\n              options={this.getTableOptions()}\n            />\n            {modalVisible && (\n              <Modal\n                show\n                handleClose={() =>\n                  this.setState({\n                    modalVisible: false,\n                    selectedTeacher: null,\n                    selectedDate: null,\n                    selectedTime: null,\n                    selectedSubject: null,\n                  })\n                }\n                onConfirm={() => this.createAppointment()}\n                onConfirmDisabled={\n                  !selectedDate || !selectedTime || !selectedSubject\n                }\n                title='Select date for appointment'\n              >\n                {this.renderModal()}\n              </Modal>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTeachers: () => dispatch(getTeachers()),\n  createAppointment: (data, history) =>\n    dispatch(createAppointment(data, history)),\n});\n\nconst mapStateToProps = (state) => ({\n  teachers: state.teachers.teachers,\n  isLoading: state.teachers.loading,\n  suspended: state.teachers.suspended,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Teachers);\n"]},"metadata":{},"sourceType":"module"}