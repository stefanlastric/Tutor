{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/MySubjects.js\";\nimport React, { Component } from 'react';\nimport { isEmpty } from 'lodash';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getMySubjects, notAvailableSubject, availableSubject, deleteSubject } from '../../actions/subject';\nimport './Subjects.css';\nimport { getCategory } from '../../actions/category';\nimport Moment from 'react-moment';\nconst headers = [{\n  key: 'title',\n  label: 'Title'\n}, {\n  key: 'category',\n  label: 'Category'\n}, {\n  key: 'priceperhour',\n  label: 'Price per hour'\n}, {\n  key: 'available',\n  label: 'Available'\n}, {\n  key: 'datecreated',\n  label: 'Date Created'\n}, {\n  key: 'actions',\n  label: 'Actions'\n}];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\n\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getMySubjects = () => {\n      const {\n        getMySubjects\n      } = this.props;\n      getMySubjects();\n    };\n\n    this.availableSubject = id => {\n      const {\n        availableSubject\n      } = this.props;\n      availableSubject(id);\n    };\n\n    this.notAvailableSubject = id => {\n      const {\n        notAvailableSubject\n      } = this.props;\n      notAvailableSubject(id);\n    };\n\n    this.deleteSubject = id => {\n      const {\n        deleteSubject\n      } = this.props;\n      deleteSubject(id);\n    };\n\n    this.getCategory = () => {\n      const {\n        getCategory\n      } = this.props;\n      getCategory();\n    };\n\n    this.getTableOptions = () => {\n      const options = {\n        customComponents: {\n          actions: {\n            component: rowData => /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.availableSubject(rowData._id),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 15\n              }\n            }, \"Available\"), /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.notAvailableSubject(rowData._id),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 15\n              }\n            }, \"Not Available\"), /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.deleteSubject(rowData._id),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 15\n              }\n            }, \"Delete\"))\n          },\n          available: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.available));\n            }\n          },\n          datecreated: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 15\n                }\n              }, ' ', /*#__PURE__*/React.createElement(Moment, {\n                format: \"DD/MMM/YYYY hh:mm:ss\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 17\n                }\n              }, rowData.datecreated));\n            }\n          },\n          category: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 20\n                }\n              }, rowData.category && rowData.category.title);\n            }\n          }\n        }\n      };\n      return options;\n    };\n\n    this.state = {\n      subjects: []\n    };\n  }\n\n  componentDidMount() {\n    this.getMySubjects();\n    this.getCategory();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      isLoading,\n      setAvailableData\n    } = this.props;\n    console.log('isLoading: ', isLoading);\n    console.log('avail data: ', setAvailableData);\n\n    if (prevProps.isLoading && !isLoading && // (\n    !isEmpty(setAvailableData) // ||\n    //   !isEmpty(setNotAvailableData) ||\n    //   !isEmpty(deleteSubjectData))\n    ) {\n        console.log('test');\n        this.getMySubjects();\n      }\n  }\n\n  render() {\n    const {\n      subjects,\n      isLoading\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subjects_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 7\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 23\n      }\n    }, \"Loading..\"), subjects && /*#__PURE__*/React.createElement(Table, {\n      data: subjects,\n      headers: headers,\n      options: this.getTableOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getMySubjects: () => dispatch(getMySubjects()),\n  notAvailableSubject: id => dispatch(notAvailableSubject(id)),\n  availableSubject: id => dispatch(availableSubject(id)),\n  deleteSubject: id => dispatch(deleteSubject(id)),\n  getCategory: () => dispatch(getCategory())\n});\n\nconst mapStateToProps = state => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading,\n  setAvailableData: state.subjects.setAvailableData,\n  categories: state.category.category\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/MySubjects.js"],"names":["React","Component","isEmpty","connect","Table","getMySubjects","notAvailableSubject","availableSubject","deleteSubject","getCategory","Moment","headers","key","label","formatYesNo","value","Subjects","constructor","props","id","getTableOptions","options","customComponents","actions","component","rowData","_id","available","datecreated","category","title","state","subjects","componentDidMount","componentDidUpdate","prevProps","isLoading","setAvailableData","console","log","render","mapDispatchToProps","dispatch","mapStateToProps","loading","categories"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { isEmpty } from 'lodash';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport {\n  getMySubjects,\n  notAvailableSubject,\n  availableSubject,\n  deleteSubject,\n} from '../../actions/subject';\nimport './Subjects.css';\n\nimport { getCategory } from '../../actions/category';\nimport Moment from 'react-moment';\nconst headers = [\n  {\n    key: 'title',\n    label: 'Title',\n  },\n  {\n    key: 'category',\n    label: 'Category',\n  },\n  {\n    key: 'priceperhour',\n    label: 'Price per hour',\n  },\n  {\n    key: 'available',\n    label: 'Available',\n  },\n  {\n    key: 'datecreated',\n    label: 'Date Created',\n  },\n  {\n    key: 'actions',\n    label: 'Actions',\n  },\n];\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subjects: [],\n    };\n  }\n  componentDidMount() {\n    this.getMySubjects();\n    this.getCategory();\n  }\n\n  componentDidUpdate(prevProps) {\n    const { isLoading, setAvailableData } = this.props;\n    console.log('isLoading: ', isLoading);\n    console.log('avail data: ', setAvailableData);\n    if (\n      prevProps.isLoading &&\n      !isLoading &&\n      // (\n      !isEmpty(setAvailableData)\n      // ||\n      //   !isEmpty(setNotAvailableData) ||\n      //   !isEmpty(deleteSubjectData))\n    ) {\n      console.log('test');\n      this.getMySubjects();\n    }\n  }\n\n  getMySubjects = () => {\n    const { getMySubjects } = this.props;\n    getMySubjects();\n  };\n  availableSubject = (id) => {\n    const { availableSubject } = this.props;\n    availableSubject(id);\n  };\n  notAvailableSubject = (id) => {\n    const { notAvailableSubject } = this.props;\n    notAvailableSubject(id);\n  };\n  deleteSubject = (id) => {\n    const { deleteSubject } = this.props;\n    deleteSubject(id);\n  };\n  getCategory = () => {\n    const { getCategory } = this.props;\n    getCategory();\n  };\n\n  getTableOptions = () => {\n    const options = {\n      customComponents: {\n        actions: {\n          component: (rowData) => (\n            <div>\n              <button onClick={() => this.availableSubject(rowData._id)}>\n                Available\n              </button>\n\n              <button onClick={() => this.notAvailableSubject(rowData._id)}>\n                Not Available\n              </button>\n              <button onClick={() => this.deleteSubject(rowData._id)}>\n                Delete\n              </button>\n            </div>\n          ),\n        },\n        available: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.available)}</div>;\n          },\n        },\n        datecreated: {\n          component: (rowData) => {\n            return (\n              <div>\n                {' '}\n                <Moment format='DD/MMM/YYYY hh:mm:ss'>\n                  {rowData.datecreated}\n                </Moment>\n              </div>\n            );\n          },\n        },\n        category: {\n          component: (rowData) => {\n            return <div>{rowData.category && rowData.category.title}</div>;\n          },\n        },\n      },\n    };\n\n    return options;\n  };\n  render() {\n    const { subjects, isLoading } = this.props;\n    return (\n      <div className='subjects_table'>\n        {isLoading && <div>Loading..</div>}\n        {subjects && (\n          <Table\n            data={subjects}\n            headers={headers}\n            options={this.getTableOptions()}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getMySubjects: () => dispatch(getMySubjects()),\n  notAvailableSubject: (id) => dispatch(notAvailableSubject(id)),\n  availableSubject: (id) => dispatch(availableSubject(id)),\n  deleteSubject: (id) => dispatch(deleteSubject(id)),\n  getCategory: () => dispatch(getCategory()),\n});\n\nconst mapStateToProps = (state) => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading,\n  setAvailableData: state.subjects.setAvailableData,\n  categories: state.category.category,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);\n"]},"metadata":{},"sourceType":"module"}