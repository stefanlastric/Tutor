{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/Subjects.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getSubjects } from '../../actions/subject';\nimport './Subjects.css';\nimport Moment from 'react-moment';\nimport Select from 'react-select';\nimport { createAppointment } from '../../actions/appointment';\nimport { isStudent } from '../../utils/helpers';\nimport { getCategory } from '../../actions/category';\nconst options = [{\n  value: 'chocolate',\n  label: 'Chocolate'\n}, {\n  value: 'strawberry',\n  label: 'Strawberry'\n}, {\n  value: 'vanilla',\n  label: 'Vanilla'\n}];\nconst headers = [{\n  key: 'title',\n  label: 'Title'\n}, {\n  key: 'category',\n  label: 'Category'\n}, {\n  key: 'priceperhour',\n  label: 'Price per hour'\n}, {\n  key: 'available',\n  label: 'Available'\n}, {\n  key: 'datecreated',\n  label: 'Date Created'\n}, {\n  key: 'actions',\n  label: 'Actions'\n}];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\n\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createAppointment = subject => {\n      const {\n        createAppointment,\n        history\n      } = this.props;\n      const data = {\n        subjectId: subject._id,\n        teacherId: subject.createdby\n      };\n      createAppointment(data, history);\n    };\n\n    this.getSubjects = () => {\n      const {\n        getSubjects\n      } = this.props;\n      getSubjects();\n    };\n\n    this.getCategory = () => {\n      const {\n        getCategory\n      } = this.props;\n      getCategory();\n    };\n\n    this.getTableOptions = () => {\n      const options = {\n        customComponents: {\n          actions: {\n            component: data => /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 13\n              }\n            }, isStudent() && /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.createAppointment(data),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }\n            }, \"Request Appointment\"))\n          },\n          available: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.available));\n            }\n          },\n          datecreated: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Moment, {\n                format: \"DD/MMM/YYYY hh:mm:ss\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 17\n                }\n              }, rowData.createdAt));\n            }\n          },\n          category: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 20\n                }\n              }, rowData.category && rowData.category.title);\n            }\n          }\n        }\n      };\n      return options;\n    };\n\n    this.state = {\n      subjects: [],\n      selectedOption: null\n    };\n  }\n\n  componentDidMount() {\n    this.getSubjects();\n    this.getCategory();\n  }\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      subjects,\n      isLoading\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subjects_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 23\n      }\n    }, \"Loading..\"), subjects && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }\n    }, ' ', /*#__PURE__*/React.createElement(Select, {\n      options: options,\n      onChange: selectedOption => {\n        this.setState({\n          selectedOption\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }), ' ', /*#__PURE__*/React.createElement(Table, {\n      data: subjects,\n      headers: headers,\n      options: this.getTableOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getSubjects: () => dispatch(getSubjects()),\n  createAppointment: (data, history) => dispatch(createAppointment(data, history))\n});\n\nconst mapStateToProps = state => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/Subjects.js"],"names":["React","Component","connect","Table","getSubjects","Moment","Select","createAppointment","isStudent","getCategory","options","value","label","headers","key","formatYesNo","Subjects","constructor","props","subject","history","data","subjectId","_id","teacherId","createdby","getTableOptions","customComponents","actions","component","available","rowData","datecreated","createdAt","category","title","state","subjects","selectedOption","componentDidMount","nextPath","path","push","render","isLoading","setState","mapDispatchToProps","dispatch","mapStateToProps","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getSubjects } from '../../actions/subject';\nimport './Subjects.css';\nimport Moment from 'react-moment';\nimport Select from 'react-select';\nimport { createAppointment } from '../../actions/appointment';\nimport { isStudent } from '../../utils/helpers';\nimport { getCategory } from '../../actions/category';\n\nconst options = [\n  { value: 'chocolate', label: 'Chocolate' },\n  { value: 'strawberry', label: 'Strawberry' },\n  { value: 'vanilla', label: 'Vanilla' },\n];\n\nconst headers = [\n  {\n    key: 'title',\n    label: 'Title',\n  },\n  {\n    key: 'category',\n    label: 'Category',\n  },\n  {\n    key: 'priceperhour',\n    label: 'Price per hour',\n  },\n\n  {\n    key: 'available',\n    label: 'Available',\n  },\n  {\n    key: 'datecreated',\n    label: 'Date Created',\n  },\n  {\n    key: 'actions',\n    label: 'Actions',\n  },\n];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subjects: [],\n      selectedOption: null,\n    };\n  }\n  componentDidMount() {\n    this.getSubjects();\n    this.getCategory();\n  }\n\n  createAppointment = (subject) => {\n    const { createAppointment, history } = this.props;\n\n    const data = {\n      subjectId: subject._id,\n      teacherId: subject.createdby,\n    };\n    createAppointment(data, history);\n  };\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  getSubjects = () => {\n    const { getSubjects } = this.props;\n    getSubjects();\n  };\n\n  getCategory = () => {\n    const { getCategory } = this.props;\n    getCategory();\n  };\n\n  getTableOptions = () => {\n    const options = {\n      customComponents: {\n        actions: {\n          component: (data) => (\n            <div>\n              {isStudent() && (\n                <button onClick={() => this.createAppointment(data)}>\n                  Request Appointment\n                </button>\n              )}\n            </div>\n          ),\n        },\n        available: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.available)}</div>;\n          },\n        },\n        datecreated: {\n          component: (rowData) => {\n            return (\n              <div>\n                <Moment format='DD/MMM/YYYY hh:mm:ss'>\n                  {rowData.createdAt}\n                </Moment>\n              </div>\n            );\n          },\n        },\n        category: {\n          component: (rowData) => {\n            return <div>{rowData.category && rowData.category.title}</div>;\n          },\n        },\n      },\n    };\n\n    return options;\n  };\n  render() {\n    const { subjects, isLoading } = this.props;\n\n    return (\n      <div className='subjects_table'>\n        {isLoading && <div>Loading..</div>}\n\n        {subjects && (\n          <div>\n            {' '}\n            <Select\n              options={options}\n              onChange={(selectedOption) => {\n                this.setState({ selectedOption });\n              }}\n            />{' '}\n            <Table\n              data={subjects}\n              headers={headers}\n              options={this.getTableOptions()}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSubjects: () => dispatch(getSubjects()),\n  createAppointment: (data, history) =>\n    dispatch(createAppointment(data, history)),\n});\n\nconst mapStateToProps = (state) => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);\n"]},"metadata":{},"sourceType":"module"}