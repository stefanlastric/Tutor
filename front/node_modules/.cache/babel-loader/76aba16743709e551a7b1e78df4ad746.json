{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/Subjects.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getSubjects } from '../../actions/subject';\nimport './Subjects.css';\nimport Moment from 'react-moment';\nimport Select from 'react-select';\nimport { createAppointment } from '../../actions/appointment';\nimport { isStudent } from '../../utils/helpers';\nimport { getCategory } from '../../actions/category';\nimport Modal from '../modal/Modal';\nconst headers = [{\n  key: 'title',\n  label: 'Title'\n}, {\n  key: 'category',\n  label: 'Category'\n}, {\n  key: 'priceperhour',\n  label: 'Price per hour'\n}, {\n  key: 'available',\n  label: 'Available'\n}, {\n  key: 'datecreated',\n  label: 'Date Created'\n}, {\n  key: 'actions',\n  label: 'Actions'\n}];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\n\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createAppointment = subject => {\n      // const { createAppointment, history } = this.props;\n      // const data = {\n      //   subjectId: subject._id,\n      //   teacherId: subject.createdby,\n      // };\n      // createAppointment(data, history);\n      this.setState({\n        modalVisible: true\n      });\n    };\n\n    this.getSubjects = () => {\n      const {\n        getSubjects\n      } = this.props;\n      const {\n        selectedOption\n      } = this.state;\n      let params;\n\n      if (selectedOption) {\n        params = {\n          category: selectedOption.value\n        };\n      }\n\n      getSubjects(params);\n    };\n\n    this.getCategory = () => {\n      const {\n        getCategory\n      } = this.props;\n      getCategory();\n    };\n\n    this.getTableOptions = () => {\n      const options = {\n        customComponents: {\n          actions: {\n            component: data => /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 13\n              }\n            }, isStudent() && /*#__PURE__*/React.createElement(\"button\", {\n              onClick: () => this.createAppointment(data),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }\n            }, \"Request Appointment\"))\n          },\n          available: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.available));\n            }\n          },\n          datecreated: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Moment, {\n                format: \"DD/MMM/YYYY hh:mm:ss\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 17\n                }\n              }, rowData.createdAt));\n            }\n          },\n          category: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 20\n                }\n              }, rowData.category && rowData.category.title);\n            }\n          }\n        }\n      };\n      return options;\n    };\n\n    this.mapOptions = () => {\n      const {\n        categories\n      } = this.props;\n      return categories.map(category => ({\n        label: category.title,\n        value: category.title\n      }));\n    };\n\n    this.handleOptionChange = selectedOption => {\n      this.setState({\n        selectedOption\n      }, () => this.getSubjects());\n    };\n\n    this.state = {\n      subjects: [],\n      selectedOption: null,\n      modalVisible: false\n    };\n  }\n\n  componentDidMount() {\n    this.getSubjects();\n    this.getCategory();\n  }\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  render() {\n    const {\n      subjects,\n      isLoading,\n      categories\n    } = this.props;\n    const {\n      modalVisible\n    } = this.state;\n    console.log(modalVisible);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subjects_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 7\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 23\n      }\n    }, \"Loading..\"), subjects && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 11\n      }\n    }, categories.length > 0 && /*#__PURE__*/React.createElement(Select, {\n      options: this.mapOptions(),\n      onChange: selectedOption => this.handleOptionChange(selectedOption),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Table, {\n      data: subjects,\n      headers: headers,\n      options: this.getTableOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }), modalVisible && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 17\n      }\n    }, \"test\"))));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getSubjects: params => dispatch(getSubjects(params)),\n  getCategory: () => dispatch(getCategory()),\n  createAppointment: (data, history) => dispatch(createAppointment(data, history))\n});\n\nconst mapStateToProps = state => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading,\n  categories: state.category.category\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/subjects/Subjects.js"],"names":["React","Component","connect","Table","getSubjects","Moment","Select","createAppointment","isStudent","getCategory","Modal","headers","key","label","formatYesNo","value","Subjects","constructor","props","subject","setState","modalVisible","selectedOption","state","params","category","getTableOptions","options","customComponents","actions","component","data","available","rowData","datecreated","createdAt","title","mapOptions","categories","map","handleOptionChange","subjects","componentDidMount","nextPath","path","history","push","render","isLoading","console","log","length","mapDispatchToProps","dispatch","mapStateToProps","loading"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getSubjects } from '../../actions/subject';\nimport './Subjects.css';\nimport Moment from 'react-moment';\nimport Select from 'react-select';\nimport { createAppointment } from '../../actions/appointment';\nimport { isStudent } from '../../utils/helpers';\nimport { getCategory } from '../../actions/category';\n\nimport Modal from '../modal/Modal';\n\nconst headers = [\n  {\n    key: 'title',\n    label: 'Title',\n  },\n  {\n    key: 'category',\n    label: 'Category',\n  },\n  {\n    key: 'priceperhour',\n    label: 'Price per hour',\n  },\n\n  {\n    key: 'available',\n    label: 'Available',\n  },\n  {\n    key: 'datecreated',\n    label: 'Date Created',\n  },\n  {\n    key: 'actions',\n    label: 'Actions',\n  },\n];\n\nfunction formatYesNo(value) {\n  return value == 0 ? 'No' : 'Yes';\n}\nclass Subjects extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      subjects: [],\n      selectedOption: null,\n      modalVisible: false,\n    };\n  }\n  componentDidMount() {\n    this.getSubjects();\n    this.getCategory();\n  }\n\n  createAppointment = (subject) => {\n    // const { createAppointment, history } = this.props;\n\n    // const data = {\n    //   subjectId: subject._id,\n    //   teacherId: subject.createdby,\n    // };\n    // createAppointment(data, history);\n    this.setState({\n      modalVisible: true,\n    });\n  };\n\n  nextPath(path) {\n    this.props.history.push(path);\n  }\n\n  getSubjects = () => {\n    const { getSubjects } = this.props;\n    const { selectedOption } = this.state;\n\n    let params;\n    if (selectedOption) {\n      params = {\n        category: selectedOption.value,\n      };\n    }\n\n    getSubjects(params);\n  };\n\n  getCategory = () => {\n    const { getCategory } = this.props;\n    getCategory();\n  };\n\n  getTableOptions = () => {\n    const options = {\n      customComponents: {\n        actions: {\n          component: (data) => (\n            <div>\n              {isStudent() && (\n                <button onClick={() => this.createAppointment(data)}>\n                  Request Appointment\n                </button>\n              )}\n            </div>\n          ),\n        },\n        available: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.available)}</div>;\n          },\n        },\n        datecreated: {\n          component: (rowData) => {\n            return (\n              <div>\n                <Moment format='DD/MMM/YYYY hh:mm:ss'>\n                  {rowData.createdAt}\n                </Moment>\n              </div>\n            );\n          },\n        },\n        category: {\n          component: (rowData) => {\n            return <div>{rowData.category && rowData.category.title}</div>;\n          },\n        },\n      },\n    };\n\n    return options;\n  };\n\n  mapOptions = () => {\n    const { categories } = this.props;\n    return categories.map((category) => ({\n      label: category.title,\n      value: category.title,\n    }));\n  };\n\n  handleOptionChange = (selectedOption) => {\n    this.setState({ selectedOption }, () => this.getSubjects());\n  };\n\n  render() {\n    const { subjects, isLoading, categories } = this.props;\n    const { modalVisible } = this.state;\n\n    console.log(modalVisible);\n\n    return (\n      <div className='subjects_table'>\n        {isLoading && <div>Loading..</div>}\n\n        {subjects && (\n          <div>\n            {categories.length > 0 && (\n              <Select\n                options={this.mapOptions()}\n                onChange={(selectedOption) =>\n                  this.handleOptionChange(selectedOption)\n                }\n              />\n            )}\n            <Table\n              data={subjects}\n              headers={headers}\n              options={this.getTableOptions()}\n            />\n            {modalVisible && (\n              <div>\n                <div>test</div>\n              </div>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getSubjects: (params) => dispatch(getSubjects(params)),\n  getCategory: () => dispatch(getCategory()),\n  createAppointment: (data, history) =>\n    dispatch(createAppointment(data, history)),\n});\n\nconst mapStateToProps = (state) => ({\n  subjects: state.subjects.subjects,\n  isLoading: state.subjects.loading,\n  categories: state.category.category,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Subjects);\n"]},"metadata":{},"sourceType":"module"}