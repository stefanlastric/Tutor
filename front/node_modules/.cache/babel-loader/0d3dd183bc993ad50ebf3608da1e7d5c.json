{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/routing/Routes.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport Register from '../auth/RegisterOption';\nimport Login from '../auth/Login';\nimport RegStudent from '../auth/RegStudent';\nimport RegTeacher from '../auth/RegTeacher';\nimport NotFound from '../layout/ErrorPage';\nimport Table from '../table/Table';\nimport AddSubject from '../subjects/AddSubject';\nimport AddAppointment from '../appointments/AddAppointment/AddAppointment';\nimport Appointments from '../appointments/Appointments';\n\nclass Routes extends React.Component {\n  render() {\n    const {\n      isAuthenticated,\n      isLoading\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }\n    }, !isLoading && /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/regstudent\",\n      component: RegStudent,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/regteacher\",\n      component: RegTeacher,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/register\",\n      component: Register,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/login\",\n      component: Login,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: \"/table\",\n      component: Table,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), isAuthenticated && /*#__PURE__*/React.createElement(Switch, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      private: true,\n      path: \"/subject/add\",\n      component: AddSubject,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      private: true,\n      path: \"/appointment/add\",\n      component: AddAppointment,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      private: true,\n      path: \"/appointments\",\n      component: Appointments,\n      exact: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(Route, {\n      component: NotFound,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.loading\n});\n\nexport default connect(mapStateToProps)(Routes);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/routing/Routes.js"],"names":["React","connect","Route","Switch","Register","Login","RegStudent","RegTeacher","NotFound","Table","AddSubject","AddAppointment","Appointments","Routes","Component","render","isAuthenticated","isLoading","props","mapStateToProps","state","auth","loading"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport Register from '../auth/RegisterOption';\nimport Login from '../auth/Login';\nimport RegStudent from '../auth/RegStudent';\nimport RegTeacher from '../auth/RegTeacher';\nimport NotFound from '../layout/ErrorPage';\nimport Table from '../table/Table';\nimport AddSubject from '../subjects/AddSubject';\nimport AddAppointment from '../appointments/AddAppointment/AddAppointment';\nimport Appointments from '../appointments/Appointments';\n\nclass Routes extends React.Component {\n  render() {\n    const { isAuthenticated, isLoading } = this.props;\n    return (\n      <section className='container'>\n        {!isLoading && (\n          <Switch>\n            <Route exact path='/regstudent' component={RegStudent} />\n            <Route exact path='/regteacher' component={RegTeacher} />\n            <Route exact path='/register' component={Register} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/table' component={Table} />\n\n            {isAuthenticated && (\n              <Switch>\n                <Route private path='/subject/add' component={AddSubject} />\n                <Route\n                  private\n                  path='/appointment/add'\n                  component={AddAppointment}\n                />\n                <Route\n                  private\n                  path='/appointments'\n                  component={Appointments}\n                  exact\n                />\n              </Switch>\n            )}\n            <Route component={NotFound} />\n          </Switch>\n        )}\n      </section>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: state.auth.isAuthenticated,\n  isLoading: state.auth.loading,\n});\n\nexport default connect(mapStateToProps)(Routes);\n"]},"metadata":{},"sourceType":"module"}