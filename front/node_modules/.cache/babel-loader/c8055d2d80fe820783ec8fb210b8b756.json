{"ast":null,"code":"var _jsxFileName = \"/home/stefan/Desktop/APLIKACIJA/front/src/components/teachers/TeachersStudents.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getTeachers } from '../../actions/teachers';\nimport './Teachers.css';\nimport Moment from 'react-moment';\nimport Modal from '../modal/Modal';\nimport DatePicker from 'react-datepicker';\nimport TimePicker from 'react-times';\nimport { createAppointment } from '../../actions/appointment'; // use material theme\n\nimport 'react-times/css/material/default.css'; // or you can use classic theme\n\nimport 'react-times/css/classic/default.css';\nconst headers = [{\n  key: 'name',\n  label: 'Name'\n}, {\n  key: 'surname',\n  label: 'Surname'\n}, {\n  key: 'education',\n  label: 'Education'\n}, {\n  key: 'qualification',\n  label: 'Qualification'\n}, {\n  key: 'suspended',\n  label: 'Suspended'\n}, {\n  key: 'date',\n  label: 'Date created'\n}, {\n  key: 'actions',\n  label: 'Actions'\n}];\n\nfunction formatYesNo(value) {\n  return !value ? 'No' : 'Yes';\n}\n\nclass Teachers extends Component {\n  constructor(props) {\n    super(props);\n\n    this.createAppointment = () => {\n      const {\n        createAppointment,\n        history\n      } = this.props;\n      const {\n        selectedSubject,\n        selectedDate,\n        selectedTime\n      } = this.state;\n      const date = new Date(selectedDate.getUTCFullYear(), selectedDate.getUTCMonth(), selectedDate.getUTCDate() + 1, selectedTime.hour, selectedTime.minute, 0, 0);\n      const data = {\n        subjectId: selectedSubject._id,\n        teacherId: selectedSubject.createdby,\n        requestedDate: date\n      };\n      createAppointment(data, history);\n    };\n\n    this.getTeachers = () => {\n      const {\n        getTeachers\n      } = this.props;\n      getTeachers();\n    };\n\n    this.getTableOptions = () => {\n      const {\n        teachers,\n        rowInfo\n      } = this.props;\n      const options = {\n        customComponents: {\n          actions: {\n            component: data => /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 13\n              }\n            }, /*#__PURE__*/React.createElement(\"div\", {\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 15\n              }\n            }, console.log('eeeee', rowInfo)), /*#__PURE__*/React.createElement(\"button\", {\n              className: \"btn btn-secondary\",\n              onClick: () => this.setState({\n                modalVisible: true,\n                selectedSubject: data\n              }),\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 15\n              }\n            }, \"Request Appointment\"))\n          },\n          date: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 15\n                }\n              }, /*#__PURE__*/React.createElement(Moment, {\n                format: \"DD/MMM/YYYY hh:mm:ss\",\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 17\n                }\n              }, rowData.datecreated));\n            }\n          },\n          suspended: {\n            component: rowData => {\n              return /*#__PURE__*/React.createElement(\"div\", {\n                __self: this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 20\n                }\n              }, formatYesNo(rowData.suspended));\n            }\n          }\n        }\n      };\n      return options;\n    };\n\n    this.handleDateChange = selectedDate => {\n      this.setState({\n        selectedDate\n      });\n    };\n\n    this.handleTimeChange = selectedTime => {\n      this.setState({\n        selectedTime\n      });\n    };\n\n    this.renderModal = () => {\n      const {\n        selectedDate,\n        selectedTime\n      } = this.state;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"appointment_date_modal\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 9\n        }\n      }, \"Choose Date:\"), /*#__PURE__*/React.createElement(DatePicker, {\n        selected: selectedDate,\n        onChange: this.handleDateChange,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, \"Choose Time:\"), /*#__PURE__*/React.createElement(TimePicker, {\n        time: selectedTime && `${selectedTime.hour}:${selectedTime.minute}`,\n        onTimeChange: this.handleTimeChange,\n        theme: \"classic\",\n        timeMode: \"24\" // use 24 or 12 hours mode, default 24\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 9\n        }\n      }));\n    };\n\n    this.state = {\n      teachers: [],\n      modalVisible: false,\n      selectedSubject: null,\n      selectedDate: null,\n      selectedTime: '10:00'\n    };\n  }\n\n  componentDidMount() {\n    this.getTeachers();\n  }\n\n  render() {\n    const {\n      teachers,\n      isLoading,\n      categories\n    } = this.props;\n    const {\n      modalVisible,\n      selectedSubject,\n      selectedDate,\n      selectedTime\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"subjects_table\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    }, isLoading && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 23\n      }\n    }, \"Loading..\"), teachers && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Table, {\n      data: teachers,\n      headers: headers,\n      options: this.getTableOptions(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 13\n      }\n    }), modalVisible && /*#__PURE__*/React.createElement(Modal, {\n      show: true,\n      handleClose: () => this.setState({\n        modalVisible: false,\n        selectedSubject: null,\n        selectedDate: null,\n        selectedTime: null\n      }),\n      onConfirm: () => this.createAppointment(),\n      onConfirmDisabled: !selectedDate || !selectedTime,\n      title: \"Select date for appointment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 15\n      }\n    }, this.renderModal())));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  getTeachers: () => dispatch(getTeachers()),\n  createAppointment: (data, history) => dispatch(createAppointment(data, history))\n});\n\nconst mapStateToProps = state => ({\n  teachers: state.teachers.teachers,\n  isLoading: state.teachers.loading,\n  suspended: state.teachers.suspended\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Teachers);","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/components/teachers/TeachersStudents.js"],"names":["React","Component","connect","Table","getTeachers","Moment","Modal","DatePicker","TimePicker","createAppointment","headers","key","label","formatYesNo","value","Teachers","constructor","props","history","selectedSubject","selectedDate","selectedTime","state","date","Date","getUTCFullYear","getUTCMonth","getUTCDate","hour","minute","data","subjectId","_id","teacherId","createdby","requestedDate","getTableOptions","teachers","rowInfo","options","customComponents","actions","component","console","log","setState","modalVisible","rowData","datecreated","suspended","handleDateChange","handleTimeChange","renderModal","componentDidMount","render","isLoading","categories","mapDispatchToProps","dispatch","mapStateToProps","loading"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,SAASC,iBAAT,QAAkC,2BAAlC,C,CACA;;AACA,OAAO,sCAAP,C,CACA;;AACA,OAAO,qCAAP;AAEA,MAAMC,OAAO,GAAG,CACd;AACEC,EAAAA,GAAG,EAAE,MADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CADc,EAKd;AACED,EAAAA,GAAG,EAAE,SADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CALc,EASd;AACED,EAAAA,GAAG,EAAE,WADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CATc,EAad;AACED,EAAAA,GAAG,EAAE,eADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAbc,EAiBd;AACED,EAAAA,GAAG,EAAE,WADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAjBc,EAsBd;AACED,EAAAA,GAAG,EAAE,MADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CAtBc,EA0Bd;AACED,EAAAA,GAAG,EAAE,SADP;AAEEC,EAAAA,KAAK,EAAE;AAFT,CA1Bc,CAAhB;;AA+BA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAC1B,SAAO,CAACA,KAAD,GAAS,IAAT,GAAgB,KAAvB;AACD;;AACD,MAAMC,QAAN,SAAuBd,SAAvB,CAAiC;AAC/Be,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAanBR,iBAbmB,GAaC,MAAM;AACxB,YAAM;AAAEA,QAAAA,iBAAF;AAAqBS,QAAAA;AAArB,UAAiC,KAAKD,KAA5C;AACA,YAAM;AAAEE,QAAAA,eAAF;AAAmBC,QAAAA,YAAnB;AAAiCC,QAAAA;AAAjC,UAAkD,KAAKC,KAA7D;AAEA,YAAMC,IAAI,GAAG,IAAIC,IAAJ,CACXJ,YAAY,CAACK,cAAb,EADW,EAEXL,YAAY,CAACM,WAAb,EAFW,EAGXN,YAAY,CAACO,UAAb,KAA4B,CAHjB,EAIXN,YAAY,CAACO,IAJF,EAKXP,YAAY,CAACQ,MALF,EAMX,CANW,EAOX,CAPW,CAAb;AAUA,YAAMC,IAAI,GAAG;AACXC,QAAAA,SAAS,EAAEZ,eAAe,CAACa,GADhB;AAEXC,QAAAA,SAAS,EAAEd,eAAe,CAACe,SAFhB;AAGXC,QAAAA,aAAa,EAAEZ;AAHJ,OAAb;AAKAd,MAAAA,iBAAiB,CAACqB,IAAD,EAAOZ,OAAP,CAAjB;AACD,KAjCkB;;AAAA,SAmCnBd,WAnCmB,GAmCL,MAAM;AAClB,YAAM;AAAEA,QAAAA;AAAF,UAAkB,KAAKa,KAA7B;AACAb,MAAAA,WAAW;AACZ,KAtCkB;;AAAA,SAwCnBgC,eAxCmB,GAwCD,MAAM;AACtB,YAAM;AAAEC,QAAAA,QAAF;AAAYC,QAAAA;AAAZ,UAAwB,KAAKrB,KAAnC;AACA,YAAMsB,OAAO,GAAG;AACdC,QAAAA,gBAAgB,EAAE;AAChBC,UAAAA,OAAO,EAAE;AACPC,YAAAA,SAAS,EAAGZ,IAAD,iBACT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAMa,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBN,OAArB,CAAN,CADF,eAEE;AACE,cAAA,SAAS,EAAC,mBADZ;AAEE,cAAA,OAAO,EAAE,MACP,KAAKO,QAAL,CAAc;AACZC,gBAAAA,YAAY,EAAE,IADF;AAEZ3B,gBAAAA,eAAe,EAAEW;AAFL,eAAd,CAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFF;AAFK,WADO;AAmBhBP,UAAAA,IAAI,EAAE;AACJmB,YAAAA,SAAS,EAAGK,OAAD,IAAa;AACtB,kCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BACE,oBAAC,MAAD;AAAQ,gBAAA,MAAM,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBACGA,OAAO,CAACC,WADX,CADF,CADF;AAOD;AATG,WAnBU;AA8BhBC,UAAAA,SAAS,EAAE;AACTP,YAAAA,SAAS,EAAGK,OAAD,IAAa;AACtB,kCAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAMlC,WAAW,CAACkC,OAAO,CAACE,SAAT,CAAjB,CAAP;AACD;AAHQ;AA9BK;AADJ,OAAhB;AAuCA,aAAOV,OAAP;AACD,KAlFkB;;AAAA,SAoFnBW,gBApFmB,GAoFC9B,YAAD,IAAkB;AACnC,WAAKyB,QAAL,CAAc;AAAEzB,QAAAA;AAAF,OAAd;AACD,KAtFkB;;AAAA,SAwFnB+B,gBAxFmB,GAwFC9B,YAAD,IAAkB;AACnC,WAAKwB,QAAL,CAAc;AAAExB,QAAAA;AAAF,OAAd;AACD,KA1FkB;;AAAA,SA4FnB+B,WA5FmB,GA4FL,MAAM;AAClB,YAAM;AAAEhC,QAAAA,YAAF;AAAgBC,QAAAA;AAAhB,UAAiC,KAAKC,KAA5C;AACA,0BACE;AAAK,QAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,oBAAC,UAAD;AAAY,QAAA,QAAQ,EAAEF,YAAtB;AAAoC,QAAA,QAAQ,EAAE,KAAK8B,gBAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHF,eAIE,oBAAC,UAAD;AACE,QAAA,IAAI,EAAE7B,YAAY,IAAK,GAAEA,YAAY,CAACO,IAAK,IAAGP,YAAY,CAACQ,MAAO,EADpE;AAEE,QAAA,YAAY,EAAE,KAAKsB,gBAFrB;AAGE,QAAA,KAAK,EAAC,SAHR;AAIE,QAAA,QAAQ,EAAC,IAJX,CAIgB;AAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAaD,KA3GkB;;AAEjB,SAAK7B,KAAL,GAAa;AACXe,MAAAA,QAAQ,EAAE,EADC;AAEXS,MAAAA,YAAY,EAAE,KAFH;AAGX3B,MAAAA,eAAe,EAAE,IAHN;AAIXC,MAAAA,YAAY,EAAE,IAJH;AAKXC,MAAAA,YAAY,EAAE;AALH,KAAb;AAOD;;AACDgC,EAAAA,iBAAiB,GAAG;AAClB,SAAKjD,WAAL;AACD;;AAgGDkD,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,QAAF;AAAYkB,MAAAA,SAAZ;AAAuBC,MAAAA;AAAvB,QAAsC,KAAKvC,KAAjD;AACA,UAAM;AACJ6B,MAAAA,YADI;AAEJ3B,MAAAA,eAFI;AAGJC,MAAAA,YAHI;AAIJC,MAAAA;AAJI,QAKF,KAAKC,KALT;AAOA,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGiC,SAAS,iBAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADhB,EAEGlB,QAAQ,iBACP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,IAAI,EAAEA,QADR;AAEE,MAAA,OAAO,EAAE3B,OAFX;AAGE,MAAA,OAAO,EAAE,KAAK0B,eAAL,EAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGU,YAAY,iBACX,oBAAC,KAAD;AACE,MAAA,IAAI,MADN;AAEE,MAAA,WAAW,EAAE,MACX,KAAKD,QAAL,CAAc;AACZC,QAAAA,YAAY,EAAE,KADF;AAEZ3B,QAAAA,eAAe,EAAE,IAFL;AAGZC,QAAAA,YAAY,EAAE,IAHF;AAIZC,QAAAA,YAAY,EAAE;AAJF,OAAd,CAHJ;AAUE,MAAA,SAAS,EAAE,MAAM,KAAKZ,iBAAL,EAVnB;AAWE,MAAA,iBAAiB,EAAE,CAACW,YAAD,IAAiB,CAACC,YAXvC;AAYE,MAAA,KAAK,EAAC,6BAZR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcG,KAAK+B,WAAL,EAdH,CAPJ,CAHJ,CADF;AAgCD;;AAtJ8B;;AAyJjC,MAAMK,kBAAkB,GAAIC,QAAD,KAAe;AACxCtD,EAAAA,WAAW,EAAE,MAAMsD,QAAQ,CAACtD,WAAW,EAAZ,CADa;AAExCK,EAAAA,iBAAiB,EAAE,CAACqB,IAAD,EAAOZ,OAAP,KACjBwC,QAAQ,CAACjD,iBAAiB,CAACqB,IAAD,EAAOZ,OAAP,CAAlB;AAH8B,CAAf,CAA3B;;AAMA,MAAMyC,eAAe,GAAIrC,KAAD,KAAY;AAClCe,EAAAA,QAAQ,EAAEf,KAAK,CAACe,QAAN,CAAeA,QADS;AAElCkB,EAAAA,SAAS,EAAEjC,KAAK,CAACe,QAAN,CAAeuB,OAFQ;AAGlCX,EAAAA,SAAS,EAAE3B,KAAK,CAACe,QAAN,CAAeY;AAHQ,CAAZ,CAAxB;;AAMA,eAAe/C,OAAO,CAACyD,eAAD,EAAkBF,kBAAlB,CAAP,CAA6C1C,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Table from '../table/Table';\nimport { getTeachers } from '../../actions/teachers';\nimport './Teachers.css';\nimport Moment from 'react-moment';\nimport Modal from '../modal/Modal';\nimport DatePicker from 'react-datepicker';\nimport TimePicker from 'react-times';\nimport { createAppointment } from '../../actions/appointment';\n// use material theme\nimport 'react-times/css/material/default.css';\n// or you can use classic theme\nimport 'react-times/css/classic/default.css';\n\nconst headers = [\n  {\n    key: 'name',\n    label: 'Name',\n  },\n  {\n    key: 'surname',\n    label: 'Surname',\n  },\n  {\n    key: 'education',\n    label: 'Education',\n  },\n  {\n    key: 'qualification',\n    label: 'Qualification',\n  },\n  {\n    key: 'suspended',\n    label: 'Suspended',\n  },\n\n  {\n    key: 'date',\n    label: 'Date created',\n  },\n  {\n    key: 'actions',\n    label: 'Actions',\n  },\n];\nfunction formatYesNo(value) {\n  return !value ? 'No' : 'Yes';\n}\nclass Teachers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      teachers: [],\n      modalVisible: false,\n      selectedSubject: null,\n      selectedDate: null,\n      selectedTime: '10:00',\n    };\n  }\n  componentDidMount() {\n    this.getTeachers();\n  }\n  createAppointment = () => {\n    const { createAppointment, history } = this.props;\n    const { selectedSubject, selectedDate, selectedTime } = this.state;\n\n    const date = new Date(\n      selectedDate.getUTCFullYear(),\n      selectedDate.getUTCMonth(),\n      selectedDate.getUTCDate() + 1,\n      selectedTime.hour,\n      selectedTime.minute,\n      0,\n      0\n    );\n\n    const data = {\n      subjectId: selectedSubject._id,\n      teacherId: selectedSubject.createdby,\n      requestedDate: date,\n    };\n    createAppointment(data, history);\n  };\n\n  getTeachers = () => {\n    const { getTeachers } = this.props;\n    getTeachers();\n  };\n\n  getTableOptions = () => {\n    const { teachers, rowInfo } = this.props;\n    const options = {\n      customComponents: {\n        actions: {\n          component: (data) => (\n            <div>\n              <div>{console.log('eeeee', rowInfo)}</div>\n              <button\n                className='btn btn-secondary'\n                onClick={() =>\n                  this.setState({\n                    modalVisible: true,\n                    selectedSubject: data,\n                  })\n                }\n              >\n                Request Appointment\n              </button>\n            </div>\n          ),\n        },\n        date: {\n          component: (rowData) => {\n            return (\n              <div>\n                <Moment format='DD/MMM/YYYY hh:mm:ss'>\n                  {rowData.datecreated}\n                </Moment>\n              </div>\n            );\n          },\n        },\n        suspended: {\n          component: (rowData) => {\n            return <div>{formatYesNo(rowData.suspended)}</div>;\n          },\n        },\n      },\n    };\n\n    return options;\n  };\n\n  handleDateChange = (selectedDate) => {\n    this.setState({ selectedDate });\n  };\n\n  handleTimeChange = (selectedTime) => {\n    this.setState({ selectedTime });\n  };\n\n  renderModal = () => {\n    const { selectedDate, selectedTime } = this.state;\n    return (\n      <div className='appointment_date_modal'>\n        <span>Choose Date:</span>\n        <DatePicker selected={selectedDate} onChange={this.handleDateChange} />\n        <span>Choose Time:</span>\n        <TimePicker\n          time={selectedTime && `${selectedTime.hour}:${selectedTime.minute}`}\n          onTimeChange={this.handleTimeChange}\n          theme='classic'\n          timeMode='24' // use 24 or 12 hours mode, default 24\n        />\n      </div>\n    );\n  };\n  render() {\n    const { teachers, isLoading, categories } = this.props;\n    const {\n      modalVisible,\n      selectedSubject,\n      selectedDate,\n      selectedTime,\n    } = this.state;\n\n    return (\n      <div className='subjects_table'>\n        {isLoading && <div>Loading..</div>}\n        {teachers && (\n          <div>\n            <Table\n              data={teachers}\n              headers={headers}\n              options={this.getTableOptions()}\n            />\n            {modalVisible && (\n              <Modal\n                show\n                handleClose={() =>\n                  this.setState({\n                    modalVisible: false,\n                    selectedSubject: null,\n                    selectedDate: null,\n                    selectedTime: null,\n                  })\n                }\n                onConfirm={() => this.createAppointment()}\n                onConfirmDisabled={!selectedDate || !selectedTime}\n                title='Select date for appointment'\n              >\n                {this.renderModal()}\n              </Modal>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  getTeachers: () => dispatch(getTeachers()),\n  createAppointment: (data, history) =>\n    dispatch(createAppointment(data, history)),\n});\n\nconst mapStateToProps = (state) => ({\n  teachers: state.teachers.teachers,\n  isLoading: state.teachers.loading,\n  suspended: state.teachers.suspended,\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Teachers);\n"]},"metadata":{},"sourceType":"module"}