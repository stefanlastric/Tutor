{"ast":null,"code":"import { GET_SUBJECTS, GET_MY_SUBJECTS, GET_SUBJECT, SUBJECT_ERROR, DELETE_SUBJECT, ADD_SUBJECT, NOT_AVAILABLE_SUBJECT } from '../actions/types';\nconst initialState = {\n  subjects: [],\n  subject: null,\n  loading: true,\n  error: {}\n};\nexport default function (state = initialState, action) {\n  const {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case GET_SUBJECTS:\n    case GET_MY_SUBJECTS:\n      return { ...state,\n        subjects: payload,\n        loading: false\n      };\n\n    case GET_SUBJECT:\n      return { ...state,\n        subject: payload,\n        loading: false\n      };\n\n    case ADD_SUBJECT:\n      return { ...state,\n        subjects: [payload, ...state.subjects],\n        loading: false\n      };\n\n    case NOT_AVAILABLE_SUBJECT:\n      return { ...state,\n        subjects: state.subjects.map(subject => subjects._id === payload.id ? { ...subject\n        } : subject),\n        loading: false\n      };\n    //fix delete\n\n    case DELETE_SUBJECT:\n      return { ...state,\n        subjects: state.subjects.filter(subject => subject._id !== payload),\n        loading: false\n      };\n\n    case SUBJECT_ERROR:\n      return { ...state,\n        subjects: payload,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/stefan/Desktop/APLIKACIJA/front/src/reducers/subject.js"],"names":["GET_SUBJECTS","GET_MY_SUBJECTS","GET_SUBJECT","SUBJECT_ERROR","DELETE_SUBJECT","ADD_SUBJECT","NOT_AVAILABLE_SUBJECT","initialState","subjects","subject","loading","error","state","action","type","payload","map","_id","id","filter"],"mappings":"AAAA,SACEA,YADF,EAEEC,eAFF,EAGEC,WAHF,EAIEC,aAJF,EAKEC,cALF,EAMEC,WANF,EAOEC,qBAPF,QAQO,kBARP;AASA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,QAAQ,EAAE,EADS;AAEnBC,EAAAA,OAAO,EAAE,IAFU;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;AAOA,eAAe,UAAUC,KAAK,GAAGL,YAAlB,EAAgCM,MAAhC,EAAwC;AACrD,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBF,MAA1B;;AAEA,UAAQC,IAAR;AACE,SAAKd,YAAL;AACA,SAAKC,eAAL;AACE,aAAO,EACL,GAAGW,KADE;AAELJ,QAAAA,QAAQ,EAAEO,OAFL;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKR,WAAL;AACE,aAAO,EACL,GAAGU,KADE;AAELH,QAAAA,OAAO,EAAEM,OAFJ;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKL,WAAL;AACE,aAAO,EACL,GAAGO,KADE;AAELJ,QAAAA,QAAQ,EAAE,CAACO,OAAD,EAAU,GAAGH,KAAK,CAACJ,QAAnB,CAFL;AAGLE,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKJ,qBAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeQ,GAAf,CAAoBP,OAAD,IAC3BD,QAAQ,CAACS,GAAT,KAAiBF,OAAO,CAACG,EAAzB,GAA8B,EAAE,GAAGT;AAAL,SAA9B,GAA+CA,OADvC,CAFL;AAKLC,QAAAA,OAAO,EAAE;AALJ,OAAP;AAOF;;AACA,SAAKN,cAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELJ,QAAAA,QAAQ,EAAEI,KAAK,CAACJ,QAAN,CAAeW,MAAf,CAAuBV,OAAD,IAAaA,OAAO,CAACQ,GAAR,KAAgBF,OAAnD,CAFL;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF,SAAKP,aAAL;AACE,aAAO,EACL,GAAGS,KADE;AAELJ,QAAAA,QAAQ,EAAEO,OAFL;AAGLL,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKF;AACE,aAAOE,KAAP;AA1CJ;AA4CD","sourcesContent":["import {\n  GET_SUBJECTS,\n  GET_MY_SUBJECTS,\n  GET_SUBJECT,\n  SUBJECT_ERROR,\n  DELETE_SUBJECT,\n  ADD_SUBJECT,\n  NOT_AVAILABLE_SUBJECT,\n} from '../actions/types';\nconst initialState = {\n  subjects: [],\n  subject: null,\n  loading: true,\n  error: {},\n};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_SUBJECTS:\n    case GET_MY_SUBJECTS:\n      return {\n        ...state,\n        subjects: payload,\n        loading: false,\n      };\n    case GET_SUBJECT:\n      return {\n        ...state,\n        subject: payload,\n        loading: false,\n      };\n    case ADD_SUBJECT:\n      return {\n        ...state,\n        subjects: [payload, ...state.subjects],\n        loading: false,\n      };\n    case NOT_AVAILABLE_SUBJECT:\n      return {\n        ...state,\n        subjects: state.subjects.map((subject) =>\n          subjects._id === payload.id ? { ...subject } : subject\n        ),\n        loading: false,\n      };\n    //fix delete\n    case DELETE_SUBJECT:\n      return {\n        ...state,\n        subjects: state.subjects.filter((subject) => subject._id !== payload),\n        loading: false,\n      };\n    case SUBJECT_ERROR:\n      return {\n        ...state,\n        subjects: payload,\n        loading: false,\n      };\n    default:\n      return state;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}